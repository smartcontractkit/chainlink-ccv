stubQuorumValidation = false
pyroscope_url = "http://pyroscope:4040"

[server]
  address = ":50051"

[healthCheck]
  enabled = true

[storage]
  type = "postgres"

[chainStatuses]
  maxChainStatusesPerRequest = 100

[orphanRecovery]
  enabled = false
  intervalSeconds = 300

# Rate Limiting Configuration
[rateLimiting]
  enabled = true
  
  # Storage backend: "memory" (single instance) or "redis" (distributed)
  [rateLimiting.storage]
    type = "redis"
    
    [rateLimiting.storage.redis]
      key_prefix = "ratelimit"
  
  # Default rate limits (applied to all callers unless overridden)
  [rateLimiting.defaultLimits]
    "/chainlink_ccv.v1.VerifierResultAPI/GetMessagesSince" = { limit_per_minute = 1200 }
    "/chainlink_ccv.v1.VerifierResultAPI/GetVerifierResultForMessage" = { limit_per_minute = 6000 }
  
  # Group-based rate limits (more restrictive than defaults for specific groups)
  [rateLimiting.groupLimits.verifiers]
    "/chainlink_ccv.v1.Aggregator/BatchWriteCommitCCVNodeData" = { limit_per_minute = 6000 }
    "/chainlink_ccv.v1.Aggregator/WriteChainStatus" = { limit_per_minute = 60 }
    "/chainlink_ccv.v1.Aggregator/ReadChainStatus" = { limit_per_minute = 60 }
  
  [rateLimiting.groupLimits.monitoring]
    "/chainlink_ccv.v1.VerifierResultAPI/GetMessagesSince" = { limit_per_minute = 200 }

# TODO: multi-committee support should be removed at some point.
[committees]
  [committees.default]
    [committees.default.quorumConfigs]
      [committees.default.quorumConfigs.12922642891491394802]
        committeeVerifierAddress = "0x9A9f2CCfdE556A7E9Ff0848998Aa4a0CFD8863AE"
        threshold = 2

        [[committees.default.quorumConfigs.12922642891491394802.signers]]
          participantID = "default-participant1"
          addresses = ["0x2c127e1eea67c6ec6945652183d4f043141705b2"]

        [[committees.default.quorumConfigs.12922642891491394802.signers]]
          participantID = "default-participant2"
          addresses = ["0x2a3e6b4676d01c5afdd710f01d2b8870bdef182d"]
      [committees.default.quorumConfigs.3379446385462418246]
        committeeVerifierAddress = "0x9A9f2CCfdE556A7E9Ff0848998Aa4a0CFD8863AE"
        threshold = 2

        [[committees.default.quorumConfigs.3379446385462418246.signers]]
          participantID = "default-participant1"
          addresses = ["0x2c127e1eea67c6ec6945652183d4f043141705b2"]

        [[committees.default.quorumConfigs.3379446385462418246.signers]]
          participantID = "default-participant2"
          addresses = ["0x2a3e6b4676d01c5afdd710f01d2b8870bdef182d"]
      [committees.default.quorumConfigs.4793464827907405086]
        committeeVerifierAddress = "0x9A9f2CCfdE556A7E9Ff0848998Aa4a0CFD8863AE"
        threshold = 2

        [[committees.default.quorumConfigs.4793464827907405086.signers]]
          participantID = "default-participant1"
          addresses = ["0x2c127e1eea67c6ec6945652183d4f043141705b2"]
        
        [[committees.default.quorumConfigs.4793464827907405086.signers]]
          participantID = "default-participant2"
          addresses = ["0x2a3e6b4676d01c5afdd710f01d2b8870bdef182d"]
    [committees.default.sourceVerifierAddresses]
      12922642891491394802 = "0x9A9f2CCfdE556A7E9Ff0848998Aa4a0CFD8863AE"
      3379446385462418246 = "0x9A9f2CCfdE556A7E9Ff0848998Aa4a0CFD8863AE"
      4793464827907405086 = "0x9A9f2CCfdE556A7E9Ff0848998Aa4a0CFD8863AE"

[Monitoring]
Enabled = true
Type = "beholder"
[Monitoring.Beholder]
InsecureConnection = true
CACertFile = ""
OtelExporterGRPCEndpoint = ""
OtelExporterHTTPEndpoint = "otel-collector:4318"
LogStreamingEnabled = true
MetricReaderInterval = 5
TraceSampleRatio = 1.0
TraceBatchTimeout = 10

# API Client Metadata Configuration
# This section defines static metadata for API clients
# The actual API keys and secrets are loaded from environment variables

[apiClients.verifier_1]
description = "Development default verifier node 1"
groups = ["verifiers"]
enabled = true
admin = false
key_pair_env_vars = [
  { api_key_env = "AGGREGATOR_VERIFIER_1_API_KEY", secret_env = "AGGREGATOR_VERIFIER_1_SECRET" }
]

[apiClients.verifier_2]
description = "Development default verifier node 2"
groups = ["verifiers"]
enabled = true
admin = false
key_pair_env_vars = [
  { api_key_env = "AGGREGATOR_VERIFIER_2_API_KEY", secret_env = "AGGREGATOR_VERIFIER_2_SECRET" }
]

[apiClients.monitoring]
description = "Monitoring and infrastructure client"
groups = ["monitoring"]
enabled = true
admin = false
key_pair_env_vars = [
  { api_key_env = "AGGREGATOR_MONITORING_API_KEY", secret_env = "AGGREGATOR_MONITORING_SECRET" }
]
