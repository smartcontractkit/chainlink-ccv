name: End-to-end CCV Test (EVM Testnets)

on:
  workflow_dispatch:

defaults:
  run:
    working-directory: build/devenv

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.sha }}
  cancel-in-progress: true

jobs:
  e2e-testnets:
    permissions:
      id-token: write
      contents: read
    runs-on: runs-on=${{ github.run_id }}/family=c6i/cpu=32+48/ram=64+96/spot=false/image=ubuntu24-full-x64/extras=s3-cache+tmpfs
    steps:
      - name: Enable S3 Cache for Self-Hosted Runners
        uses: runs-on/action@cd2b598b0515d39d78c38a02d529db87d2196d1e # v2.0.3

      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Install Just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3
        with:
          just-version: '1.40.0'

      - name: Authenticate to AWS ECR
        uses: ./.github/actions/aws-ecr-auth
        with:
          role-to-assume: ${{ secrets.CCV_IAM_ROLE }}
          aws-region: us-east-1
          registry-type: public

      - name: Set up Go
        uses: actions/setup-go@v6 # v6
        with:
          cache: true
          go-version-file: build/devenv/go.mod
          cache-dependency-path: build/devenv/go.sum

      - name: Download Go dependencies
        run: |
          go mod download

      - name: Build Docker Images
        run: just build-docker-dev-ci
        env:
          DOCKER_BUILDKIT: 1

      - name: Run CCV environment
        env:
          ETH_FUJI_PRIVATE_KEY: ${{ secrets.ETH_FUJI_PRIVATE_KEY }}
        run: |
          case "${{ inputs.network }}" in
            eth_fuji)
              PRIVATE_KEY=$ETH_FUJI_PRIVATE_KEY
              ;;
            *)
              echo "Unknown network: ${{ inputs.network }}"
              exit 1
              ;;
          esac
          cd cmd/ccv && go install . && cd -
          PRIVATE_KEY=${PRIVATE_KEY} ccv env.toml,env-fuji-fantom.toml

      - name: Run Soak Test
        working-directory: build/devenv/tests/e2e
        run: go test -timeout 2h -v -run TestSoak