name: 'Build CL Node Image'
description: 'Build Chainlink node image with plugins'
inputs:
  ref:
    description: 'Chainlink Core Repository Ref'
    default: develop
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout Chainlink repository
      uses: actions/checkout@v5
      with:
        repository: smartcontractkit/chainlink
        path: chainlink-repo

    - name: Setup path to go.mod
      id: go-mod
      shell: bash
      env:
        WORKSPACE: ${{ github.workspace }}
      run: |
        echo "path=${WORKSPACE}/chainlink-repo/go.mod" | tee -a "$GITHUB_OUTPUT"

    - name: Set up Go
      uses: actions/setup-go@v6 # v6
      with:
        go-version-file: ${{ steps.go-mod.outputs.path }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-cl-${{ hashFiles(steps.go-mod.outputs.path) }}
        restore-keys: |
          ${{ runner.os }}-go-cl-

    - name: Download Go modules
      working-directory: ${{ github.workspace }}/chainlink-repo
      shell: bash
      run: go mod download

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

    - name: Build and Load Docker Image
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
      with:
        cache-from: type=gha,timeout=10m,scope=ccv-${{ runner.os }}-${{ runner.arch }}
        cache-to: type=gha,timeout=10m,mode=max,ignore-error=true,scope=ccv-${{ runner.os }}-${{ runner.arch }}
        context: ${{ github.workspace }}/chainlink-repo
        file: ${{ github.workspace }}/chainlink-repo/plugins/chainlink.Dockerfile
        load: true
        tags: local
        build-args: |
          BUILDKIT_INLINE_CACHE=1