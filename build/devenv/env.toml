cl_nodes_funding_eth = 50
cl_nodes_funding_link = 50

[cldf]

[[blockchains]]
  container_name = "blockchain-src"
  chain_id = "1337"
  docker_cmd_params = ["-b", "1", "--mixed-mining", "--slots-in-an-epoch", "1"]
  image = "ghcr.io/foundry-rs/foundry:latest"
  port = "8545"
  type = "anvil"

[[blockchains]]
  container_name = "blockchain-dst"
  chain_id = "2337"
  docker_cmd_params = ["-b", "1", "--mixed-mining", "--slots-in-an-epoch", "1"]
  image = "ghcr.io/foundry-rs/foundry:latest"
  port = "8555"
  type = "anvil"

[[blockchains]]
  container_name = "blockchain-3rd"
  chain_id = "3337"
  docker_cmd_params = ["-b", "1", "--mixed-mining", "--slots-in-an-epoch", "1"]
  image = "ghcr.io/foundry-rs/foundry:latest"
  port = "8565"
  type = "anvil"

[fake]
  image = "ccv-fakes:dev"
  port = 9111
  source_code_path = "../build/devenv/fakes"
  root_path = "../../"

## Default Verifier Setup
[[verifier]]
  image = "verifier:dev"
  container_name = "default-verifier-1"
  port = 8100
  # path is relative from "devenv" dir
  source_code_path = "../verifier"
  root_path = "../../"
  committee_name = "default"
  node_index = 0
  [verifier.db]
    image = "postgres:16-alpine"
    name = "default-verifier-1-db"
    port = 8432
  
  # Environment variables for sensitive configuration
  [verifier.env]
    aggregator_api_key = "dev-api-key-verifier-1"
    aggregator_secret_key = "dev-secret-verifier-1"

[[verifier]]
  image = "verifier:dev"
  container_name = "default-verifier-2"
  port = 8200
  source_code_path = "../verifier"
  root_path = "../../"
  committee_name = "default"
  node_index = 1
  [verifier.db]
    image = "postgres:16-alpine"
    name = "default-verifier-2-db"
    port = 8433
  
  # Environment variables for sensitive configuration
  [verifier.env]
    aggregator_api_key = "dev-api-key-verifier-2"
    aggregator_secret_key = "dev-secret-verifier-2"

# Secondary Verifier Setup
[[verifier]]
  image = "verifier:dev"
  container_name = "secondary-verifier-1"
  port = 8300
  source_code_path = "../verifier"
  root_path = "../../"
  committee_name = "secondary"
  node_index = 0
  [verifier.db]
    image = "postgres:16-alpine"
    name = "secondary-verifier-1-db"
    port = 8434
  
  # Environment variables for sensitive configuration
  [verifier.env]
    aggregator_api_key = "dev-api-key-secondary-verifier-1"
    aggregator_secret_key = "dev-secret-secondary-verifier-1"

[[verifier]]
  image = "verifier:dev"
  container_name = "secondary-verifier-2"
  port = 8400
  source_code_path = "../verifier"
  root_path = "../../"
  committee_name = "secondary"
  node_index = 1
  [verifier.db]
    image = "postgres:16-alpine"
    name = "secondary-verifier-2-db"
    port = 8435
  
  # Environment variables for sensitive configuration
  [verifier.env]
    aggregator_api_key = "dev-api-key-secondary-verifier-2"
    aggregator_secret_key = "dev-secret-secondary-verifier-2"

# Tertiary Verifier Setup
[[verifier]]
  image = "verifier:dev"
  container_name = "tertiary-verifier-1"
  port = 8500
  source_code_path = "../verifier"
  root_path = "../../"
  committee_name = "tertiary"
  node_index = 0
  [verifier.db]
    image = "postgres:16-alpine"
    name = "tertiary-verifier-1-db"
    port = 8436
  
  # Environment variables for sensitive configuration
  [verifier.env]
    aggregator_api_key = "dev-api-key-tertiary-verifier-1"
    aggregator_secret_key = "dev-secret-tertiary-verifier-1"

[[verifier]]
  image = "verifier:dev"
  container_name = "tertiary-verifier-2"
  port = 8600
  source_code_path = "../verifier"
  root_path = "../../"
  committee_name = "tertiary"
  node_index = 1
  [verifier.db]
    image = "postgres:16-alpine"
    name = "tertiary-verifier-2-db"
    port = 8437
  
  # Environment variables for sensitive configuration
  [verifier.env]
    aggregator_api_key = "dev-api-key-tertiary-verifier-2"
    aggregator_secret_key = "dev-secret-tertiary-verifier-2"

[executor]
  image = "executor:dev"
  port = 8101
  source_code_path = "../executor"
  root_path = "../../"

[indexer]
  image = "indexer:dev"
  port = 8102
  source_code_path = "../indexer"
  root_path = "../../"
  [indexer.db]
    image = "postgres:16-alpine"

[indexer.indexer_config]
[indexer.indexer_config.Monitoring]
Enabled = true
Type = 'beholder'

[indexer.indexer_config.Monitoring.Beholder]
InsecureConnection = true
CACertFile = ''
OtelExporterGRPCEndpoint = ''
OtelExporterHTTPEndpoint = 'otel-collector:4318'
LogStreamingEnabled = true
MetricReaderInterval = 5
TraceSampleRatio = 1.0
TraceBatchTimeout = 10

[indexer.indexer_config.Scanner]
ScanInterval = 1
ReaderTimeout = 5

[indexer.indexer_config.Discovery]
Type = 'static'

[indexer.indexer_config.Discovery.Static]
[[indexer.indexer_config.Discovery.Static.Readers]]
type = 'aggregator'

[indexer.indexer_config.Discovery.Static.Readers.Aggregator]
Address = 'default-aggregator:50051'
Since = 0

# Configure the remaining aggregators as aggregator endpoints.
[[indexer.indexer_config.Discovery.Static.Readers]]
type = 'aggregator'

[indexer.indexer_config.Discovery.Static.Readers.Aggregator]
Address = 'secondary-aggregator:50051'
Since = 0

[[indexer.indexer_config.Discovery.Static.Readers]]
type = 'aggregator'

[indexer.indexer_config.Discovery.Static.Readers.Aggregator]
Address = 'tertiary-aggregator:50051'
Since = 0

[[indexer.indexer_config.Discovery.Static.Readers]]
type = 'rest'

[indexer.indexer_config.Discovery.Static.Readers.Rest]
BaseURL = 'http://fake:9111'
Since = 0
RequestTimeout = 5

[indexer.indexer_config.Storage]
Strategy = "sink" 

[[indexer.indexer_config.Storage.Sink.Storages]]
Type = "memory"

[indexer.indexer_config.Storage.Sink.Storages.Memory]
TTL = 3600            
MaxSize = 10000      
CleanupInterval = 300

[indexer.indexer_config.Storage.Sink.Storages.ReadCondition]
Type = "recent"
LookbackWindowSeconds = 3600

[[indexer.indexer_config.Storage.Sink.Storages]]
Type = "postgres"

[indexer.indexer_config.Storage.Sink.Storages.Postgres]
URI = "postgresql://indexer:indexer@indexer-db:5432/indexer?sslmode=disable"
MaxOpenConnections = 20
MaxIdleConnections = 5
IdleInTxSessionTimeout = 60
LockTimeout = 30

[indexer.indexer_config.Storage.Sink.Storages.ReadCondition]
Type = "always"

[[aggregator]]
  committee_name = "default"
  image = "aggregator:dev"
  host_port = 50051
  source_code_path = "../aggregator"
  root_path = "../../"

  [aggregator.db]
    image = "postgres:16-alpine"
    host_port  = 7432
  
  [aggregator.redis]
    image = "redis:7-alpine"
    host_port  = 6379
  
  # Environment variables for sensitive configuration
  [aggregator.env]
    storage_connection_url = "postgresql://aggregator:aggregator@default-aggregator-db:5432/aggregator?sslmode=disable"
    redis_address = "default-aggregator-redis:6379"
    redis_password = ""
    redis_db = "0"
    api_keys_json = '''
{
  "clients": {
    "dev-api-key-verifier-1": {
      "clientId": "default-verifier-1",
      "description": "Development default verifier 1",
      "enabled": true,
      "groups": ["verifiers"],
      "secrets": {
        "primary": "dev-secret-verifier-1"
      }
    },
    "dev-api-key-verifier-2": {
      "clientId": "default-verifier-2",
      "description": "Development default verifier 2",
      "enabled": true,
      "groups": ["verifiers"],
      "secrets": {
        "primary": "dev-secret-verifier-2"
      }
    },
    "dev-api-key-monitoring": {
      "clientId": "monitoring",
      "description": "Monitoring and infrastructure client",
      "enabled": true,
      "groups": ["monitoring"],
      "secrets": {
        "primary": "dev-secret-monitoring"
      }
    }
  }
}
'''

[[aggregator]]
  committee_name = "secondary"
  image = "aggregator:dev"
  host_port = 50052
  source_code_path = "../aggregator"
  root_path = "../../"

  [aggregator.db]
    image = "postgres:16-alpine"
    host_port  = 7433
  
  [aggregator.redis]
    image = "redis:7-alpine"
    host_port  = 6380
  
  # Environment variables for sensitive configuration
  [aggregator.env]
    storage_connection_url = "postgresql://aggregator:aggregator@secondary-aggregator-db:5432/aggregator?sslmode=disable"
    redis_address = "secondary-aggregator-redis:6379"
    redis_password = ""
    redis_db = "0"
    api_keys_json = '''
{
  "clients": {
    "dev-api-key-secondary-verifier-1": {
      "clientId": "secondary-verifier-1",
      "description": "Development secondary verifier 1",
      "enabled": true,
      "groups": ["verifiers"],
      "secrets": {
        "primary": "dev-secret-secondary-verifier-1"
      }
    },
    "dev-api-key-secondary-verifier-2": {
      "clientId": "secondary-verifier-2",
      "description": "Development secondary verifier 2",
      "enabled": true,
      "groups": ["verifiers"],
      "secrets": {
        "primary": "dev-secret-secondary-verifier-2"
      }
    },
    "dev-api-key-monitoring": {
      "clientId": "monitoring",
      "description": "Monitoring and infrastructure client",
      "enabled": true,
      "groups": ["monitoring"],
      "secrets": {
        "primary": "dev-secret-monitoring"
      }
    }
  }
}
'''

[[aggregator]]
  committee_name = "tertiary"
  image = "aggregator:dev"
  host_port = 50053
  source_code_path = "../aggregator"
  root_path = "../../"

  [aggregator.db]
    image = "postgres:16-alpine"
    host_port  = 7434
  
  [aggregator.redis]
    image = "redis:7-alpine"
    host_port  = 6381
  
  # Environment variables for sensitive configuration
  [aggregator.env]
    storage_connection_url = "postgresql://aggregator:aggregator@tertiary-aggregator-db:5432/aggregator?sslmode=disable"
    redis_address = "tertiary-aggregator-redis:6379"
    redis_password = ""
    redis_db = "0"
    api_keys_json = '''
{
  "clients": {
    "dev-api-key-tertiary-verifier-1": {
      "clientId": "tertiary-verifier-1",
      "description": "Development tertiary verifier 1",
      "enabled": true,
      "groups": ["verifiers"],
      "secrets": {
        "primary": "dev-secret-tertiary-verifier-1"
      }
    },
    "dev-api-key-tertiary-verifier-2": {
      "clientId": "tertiary-verifier-2",
      "description": "Development tertiary verifier 2",
      "enabled": true,
      "groups": ["verifiers"],
      "secrets": {
        "primary": "dev-secret-tertiary-verifier-2"
      }
    },
    "dev-api-key-monitoring": {
      "clientId": "monitoring",
      "description": "Monitoring and infrastructure client",
      "enabled": true,
      "groups": ["monitoring"],
      "secrets": {
        "primary": "dev-secret-monitoring"
      }
    }
  }
}
'''

[[nodesets]]
  name = "don"
  nodes = 4
  override_mode = "each"

  [nodesets.db]
    image = "postgres:15.0"

  [[nodesets.node_specs]]

    [nodesets.node_specs.node]
      image = "public.ecr.aws/chainlink/chainlink:2.26.0"

  [[nodesets.node_specs]]

    [nodesets.node_specs.node]
      image = "public.ecr.aws/chainlink/chainlink:2.26.0"

  [[nodesets.node_specs]]

    [nodesets.node_specs.node]
      image = "public.ecr.aws/chainlink/chainlink:2.26.0"

  [[nodesets.node_specs]]

    [nodesets.node_specs.node]
      image = "public.ecr.aws/chainlink/chainlink:2.26.0"
