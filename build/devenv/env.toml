cl_nodes_funding_eth = 50
cl_nodes_funding_link = 50

[cldf]

[[blockchains]]
  container_name = "blockchain-src"
  chain_id = "1337"
  docker_cmd_params = ["-b", "1", "--mixed-mining"]
  image = "ghcr.io/foundry-rs/foundry:latest"
  port = "8545"
  type = "anvil"

[[blockchains]]
  container_name = "blockchain-dst"
  chain_id = "2337"
  docker_cmd_params = ["-b", "1", "--mixed-mining"]
  image = "ghcr.io/foundry-rs/foundry:latest"
  port = "8555"
  type = "anvil"

[[blockchains]]
  container_name = "blockchain-3rd"
  chain_id = "3337"
  docker_cmd_params = ["-b", "1", "--mixed-mining"]
  image = "ghcr.io/foundry-rs/foundry:latest"
  port = "8565"
  type = "anvil"

[fake]
  image = "ccv-fakes:dev"
  port = 9111
  source_code_path = "../build/devenv/fakes"
  root_path = "../../"

# this is an example config of a new ccv service that can be integrated, see "services/indexer.go" and read README in that dir
# since the prodct is in early stages we run dev images by default, with hot-reload
[[verifier]]
  image = "verifier:dev"
  container_name = "verifier"
  port = 8100
  # path is relative from "devenv" dir
  source_code_path = "../verifier"
  root_path = "../../"
  [verifier.db]
    image = "postgres:16-alpine"
    name = "verifier_db"
    port = 8432

[[verifier]]
  image = "verifier:dev"
  container_name = "verifier2"
  port = 8200
  source_code_path = "../verifier"
  root_path = "../../"
  [verifier.db]
    image = "postgres:16-alpine"
    name = "verifier2_db"
    port = 8433

[executor]
  image = "executor:dev"
  port = 8101
  source_code_path = "../executor"
  root_path = "../../"

[indexer]
  image = "indexer:dev"
  port = 8102
  source_code_path = "../indexer"
  root_path = "../../"
  [indexer.db]
    image = "postgres:16-alpine"

[aggregator]
  image = "aggregator:dev"
  port = 50051
  source_code_path = "../aggregator"
  root_path = "../../"
  
  [aggregator.dynamodb_tables]
    commit_verification_records = "commit_verification_records"
    aggregated_reports = "aggregated_reports"
    checkpoints = "checkpoint_records"

[[nodesets]]
  name = "don"
  nodes = 4
  override_mode = "each"

  [nodesets.db]
    image = "postgres:15.0"

  [[nodesets.node_specs]]

    [nodesets.node_specs.node]
      image = "public.ecr.aws/chainlink/chainlink:2.26.0"

  [[nodesets.node_specs]]

    [nodesets.node_specs.node]
      image = "public.ecr.aws/chainlink/chainlink:2.26.0"

  [[nodesets.node_specs]]

    [nodesets.node_specs.node]
      image = "public.ecr.aws/chainlink/chainlink:2.26.0"

  [[nodesets.node_specs]]

    [nodesets.node_specs.node]
      image = "public.ecr.aws/chainlink/chainlink:2.26.0"
