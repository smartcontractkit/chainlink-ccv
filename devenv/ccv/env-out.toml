[ccv]
link_contract_address = '0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9'
cl_nodes_funding_eth = 50.0
cl_nodes_funding_link = 50.0
chain_finality_depth = 5
verification_timeout = 400
verify = true
addresses = ['[{"address":"0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9","chainSelector":12922642891491394802,"labels":[],"qualifier":"","type":"WETH","version":"1.0.0"},{"address":"0x5FC8d32690cc91D4c39d9d3abcBD16989F875707","chainSelector":12922642891491394802,"labels":[],"qualifier":"","type":"LINK","version":"1.0.0"},{"address":"0x0165878A594ca255338adfa4d48449f69242Eb8F","chainSelector":12922642891491394802,"labels":[],"qualifier":"","type":"RMNRemote","version":"1.6.0"},{"address":"0xa513E6E4b8f2a923D98304ec87F64353C4D5C853","chainSelector":12922642891491394802,"labels":[],"qualifier":"","type":"RMNProxy","version":"1.0.0"},{"address":"0x8A791620dd6260079BF849Dc5567aDC3F2FdC318","chainSelector":12922642891491394802,"labels":[],"qualifier":"","type":"Router","version":"1.2.0"},{"address":"0x610178dA211FEF7D417bC0e6FeD39F05609AD788","chainSelector":12922642891491394802,"labels":[],"qualifier":"","type":"TokenAdminRegistry","version":"1.5.0"},{"address":"0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e","chainSelector":12922642891491394802,"labels":[],"qualifier":"","type":"FeeQuoter","version":"1.7.0"},{"address":"0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0","chainSelector":12922642891491394802,"labels":[],"qualifier":"","type":"CCVAggregator","version":"1.7.0"},{"address":"0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82","chainSelector":12922642891491394802,"labels":[],"qualifier":"","type":"CCVProxy","version":"1.7.0"},{"address":"0x9A676e781A523b5d0C0e43731313A708CB607508","chainSelector":12922642891491394802,"labels":[],"qualifier":"","type":"NonceManager","version":"1.6.0"},{"address":"0x0B306BF915C4d645ff596e518fAf3F9669b97016","chainSelector":12922642891491394802,"labels":[],"qualifier":"","type":"CommitOnRamp","version":"1.7.0"},{"address":"0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1","chainSelector":12922642891491394802,"labels":[],"qualifier":"","type":"CommitOffRamp","version":"1.7.0"}]', '[{"address":"0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9","chainSelector":3379446385462418246,"labels":[],"qualifier":"","type":"WETH","version":"1.0.0"},{"address":"0x5FC8d32690cc91D4c39d9d3abcBD16989F875707","chainSelector":3379446385462418246,"labels":[],"qualifier":"","type":"LINK","version":"1.0.0"},{"address":"0x0165878A594ca255338adfa4d48449f69242Eb8F","chainSelector":3379446385462418246,"labels":[],"qualifier":"","type":"RMNRemote","version":"1.6.0"},{"address":"0xa513E6E4b8f2a923D98304ec87F64353C4D5C853","chainSelector":3379446385462418246,"labels":[],"qualifier":"","type":"RMNProxy","version":"1.0.0"},{"address":"0x8A791620dd6260079BF849Dc5567aDC3F2FdC318","chainSelector":3379446385462418246,"labels":[],"qualifier":"","type":"Router","version":"1.2.0"},{"address":"0x610178dA211FEF7D417bC0e6FeD39F05609AD788","chainSelector":3379446385462418246,"labels":[],"qualifier":"","type":"TokenAdminRegistry","version":"1.5.0"},{"address":"0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e","chainSelector":3379446385462418246,"labels":[],"qualifier":"","type":"FeeQuoter","version":"1.7.0"},{"address":"0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0","chainSelector":3379446385462418246,"labels":[],"qualifier":"","type":"CCVAggregator","version":"1.7.0"},{"address":"0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82","chainSelector":3379446385462418246,"labels":[],"qualifier":"","type":"CCVProxy","version":"1.7.0"},{"address":"0x9A676e781A523b5d0C0e43731313A708CB607508","chainSelector":3379446385462418246,"labels":[],"qualifier":"","type":"NonceManager","version":"1.6.0"},{"address":"0x0B306BF915C4d645ff596e518fAf3F9669b97016","chainSelector":3379446385462418246,"labels":[],"qualifier":"","type":"CommitOnRamp","version":"1.7.0"},{"address":"0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1","chainSelector":3379446385462418246,"labels":[],"qualifier":"","type":"CommitOffRamp","version":"1.7.0"}]']

[ccv.ea_fake]
low_value = 3
high_value = 30000

[ccv.jobs]
config_poll_interval_sec = 5
max_task_duration_sec = 60

[ccv.gas_settings]
fee_cap_multiplier = 2
tip_cap_multiplier = 2

[storage_provider]
host = '127.0.0.1'
port = 9000
console_port = 9001
access_key = 'mYrAnD0mAcc3ssK3y2024'
secret_key = 's3cR3tK3yL0ngEn0ughF0rMinI0Testing2024!'
bucket = 'test'
region = 'us-west-2'

[fake_server]
image = 'ccv-fakes:local'
port = 9111

[fake_server.out]
use_cache = false
base_url_host = 'http://localhost:9111'
base_url_docker = 'http://fake-df539:9111'

[jd]
image = 'job-distributor:local'
grpc_port = '14231'
wsrpc_port = '8080'
csa_encryption_key = '1a3f7e9d2c5b8a0f4e6d9c2b7a1e5f3d8c0b9a8d7f6e5c4b3a2d1e0f9a8b7c1a'
docker_file = ''
docker_ctx = ''
jd_sql_dump_path = ''

[jd.db]
image = 'postgres:16'
port = 14000
name = 'jd-db'
volume_name = 'jd'
databases = 0
jd_database = true
jd_sql_dump_path = ''
pull_image = false

[jd.out]
use_cache = true
container_name = 'jd-15014'
db_container_name = 'jd-db'
grpc_url = '127.0.0.1:14231'
internal_grpc_url = 'jd-15014:14231'
wsrpc_url = '127.0.0.1:8080'
internal_wsrpc_url = 'jd-15014:8080'

[[blockchains]]
type = 'anvil'
image = 'f4hrenh9it/foundry:latest'
pull_image = false
port = '8545'
port_ws = ''
chain_id = '1337'
docker_cmd_params = ['-b', '1']
public_key = ''
contracts_dir = ''
custom_ports = []
faucet_port = ''
host_network_mode = false
certificates_path = ''

[blockchains.out]
use_cache = true
type = 'anvil'
family = 'evm'
container_name = 'blockchain-node-86332'
chain_id = '1337'

[[blockchains.out.nodes]]
ws_url = 'ws://127.0.0.1:8545'
http_url = 'http://127.0.0.1:8545'
internal_ws_url = 'ws://blockchain-node-86332:8545'
internal_http_url = 'http://blockchain-node-86332:8545'

[[blockchains]]
type = 'anvil'
image = 'f4hrenh9it/foundry:latest'
pull_image = false
port = '8555'
port_ws = ''
chain_id = '2337'
docker_cmd_params = ['-b', '1']
public_key = ''
contracts_dir = ''
custom_ports = []
faucet_port = ''
host_network_mode = false
certificates_path = ''

[blockchains.out]
use_cache = true
type = 'anvil'
family = 'evm'
container_name = 'blockchain-node-65f1d'
chain_id = '2337'

[[blockchains.out.nodes]]
ws_url = 'ws://127.0.0.1:8555'
http_url = 'http://127.0.0.1:8555'
internal_ws_url = 'ws://blockchain-node-65f1d:8555'
internal_http_url = 'http://blockchain-node-65f1d:8555'

[[nodesets]]
name = 'don'
nodes = 4
http_port_range_start = 0
p2p_port_range_start = 0
dlv_port_range_start = 0
override_mode = 'each'
no_dns = false

[nodesets.db]
image = 'postgres:15.0'
port = 0
name = 'don-ns-postgresql'
volume_name = 'don'
databases = 4
jd_database = false
jd_sql_dump_path = ''
pull_image = false

[[nodesets.node_specs]]
no_dns = false

[nodesets.node_specs.node]
image = 'public.ecr.aws/chainlink/chainlink:2.26.0'
name = ''
docker_file = ''
docker_ctx = ''
pull_image = false
capabilities = []
capabilities_container_dir = ''
test_config_overrides = "\n       [[EVM]]\n       LogPollInterval = '1s'\n       BlockBackfillDepth = 100\n       LinkContractAddress = '0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9'\n       ChainID = '1337'\n       MinIncomingConfirmations = 1\n       MinContractPayment = '0.0000001 link'\n       FinalityDepth = 5\n\n       [[EVM.Nodes]]\n       Name = 'src'\n       WsUrl = 'ws://blockchain-node-86332:8545'\n       HttpUrl = 'http://blockchain-node-86332:8545'\n\n       [[EVM]]\n       LogPollInterval = '1s'\n       BlockBackfillDepth = 100\n       LinkContractAddress = '0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9'\n       ChainID = '2337'\n       MinIncomingConfirmations = 1\n       MinContractPayment = '0.0000001 link'\n       FinalityDepth = 5\n\n       [[EVM.Nodes]]\n       Name = 'dst'\n       WsUrl = 'ws://blockchain-node-65f1d:8555'\n       HttpUrl = 'http://blockchain-node-65f1d:8555'\n\n\t   [Log]\n\t   JSONConsole = true\n\t   Level = 'debug'\n\t   [Pyroscope]\n\t   ServerAddress = 'http://host.docker.internal:4040'\n\t   Environment = 'local'\n\t   [WebServer]\n       SessionTimeout = '999h0m0s'\n       HTTPWriteTimeout = '3m'\n\t   SecureCookies = false\n\t   HTTPPort = 6688\n\t   [WebServer.TLS]\n\t   HTTPSPort = 0\n       [WebServer.RateLimit]\n       Authenticated = 5000\n       Unauthenticated = 5000\n\t   [JobPipeline]\n\t   [JobPipeline.HTTPRequest]\n\t   DefaultTimeout = '1m'\n       [Log.File]\n       MaxSize = '0b'\n\t\n       [Feature]\n       FeedsManager = true\n       LogPoller = true\n       UICSAKeys = true\n       [OCR2]\n       Enabled = true\n       SimulateTransactions = false\n       DefaultTransactionQueueDepth = 1\n       [P2P.V2]\n       Enabled = true\n       ListenAddresses = ['0.0.0.0:6690']\n"
user_config_overrides = ''
test_secrets_overrides = ''
user_secrets_overrides = ''
port = 0
p2p_port = 0
custom_ports = []
debugger_port = 0

[[nodesets.node_specs]]
no_dns = false

[nodesets.node_specs.node]
image = 'public.ecr.aws/chainlink/chainlink:2.26.0'
name = ''
docker_file = ''
docker_ctx = ''
pull_image = false
capabilities = []
capabilities_container_dir = ''
test_config_overrides = "\n       [[EVM]]\n       LogPollInterval = '1s'\n       BlockBackfillDepth = 100\n       LinkContractAddress = '0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9'\n       ChainID = '1337'\n       MinIncomingConfirmations = 1\n       MinContractPayment = '0.0000001 link'\n       FinalityDepth = 5\n\n       [[EVM.Nodes]]\n       Name = 'src'\n       WsUrl = 'ws://blockchain-node-86332:8545'\n       HttpUrl = 'http://blockchain-node-86332:8545'\n\n       [[EVM]]\n       LogPollInterval = '1s'\n       BlockBackfillDepth = 100\n       LinkContractAddress = '0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9'\n       ChainID = '2337'\n       MinIncomingConfirmations = 1\n       MinContractPayment = '0.0000001 link'\n       FinalityDepth = 5\n\n       [[EVM.Nodes]]\n       Name = 'dst'\n       WsUrl = 'ws://blockchain-node-65f1d:8555'\n       HttpUrl = 'http://blockchain-node-65f1d:8555'\n\n\t   [Log]\n\t   JSONConsole = true\n\t   Level = 'debug'\n\t   [Pyroscope]\n\t   ServerAddress = 'http://host.docker.internal:4040'\n\t   Environment = 'local'\n\t   [WebServer]\n       SessionTimeout = '999h0m0s'\n       HTTPWriteTimeout = '3m'\n\t   SecureCookies = false\n\t   HTTPPort = 6688\n\t   [WebServer.TLS]\n\t   HTTPSPort = 0\n       [WebServer.RateLimit]\n       Authenticated = 5000\n       Unauthenticated = 5000\n\t   [JobPipeline]\n\t   [JobPipeline.HTTPRequest]\n\t   DefaultTimeout = '1m'\n       [Log.File]\n       MaxSize = '0b'\n\t\n       [Feature]\n       FeedsManager = true\n       LogPoller = true\n       UICSAKeys = true\n       [OCR2]\n       Enabled = true\n       SimulateTransactions = false\n       DefaultTransactionQueueDepth = 1\n       [P2P.V2]\n       Enabled = true\n       ListenAddresses = ['0.0.0.0:6690']\n"
user_config_overrides = ''
test_secrets_overrides = ''
user_secrets_overrides = ''
port = 0
p2p_port = 0
custom_ports = []
debugger_port = 0

[[nodesets.node_specs]]
no_dns = false

[nodesets.node_specs.node]
image = 'public.ecr.aws/chainlink/chainlink:2.26.0'
name = ''
docker_file = ''
docker_ctx = ''
pull_image = false
capabilities = []
capabilities_container_dir = ''
test_config_overrides = "\n       [[EVM]]\n       LogPollInterval = '1s'\n       BlockBackfillDepth = 100\n       LinkContractAddress = '0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9'\n       ChainID = '1337'\n       MinIncomingConfirmations = 1\n       MinContractPayment = '0.0000001 link'\n       FinalityDepth = 5\n\n       [[EVM.Nodes]]\n       Name = 'src'\n       WsUrl = 'ws://blockchain-node-86332:8545'\n       HttpUrl = 'http://blockchain-node-86332:8545'\n\n       [[EVM]]\n       LogPollInterval = '1s'\n       BlockBackfillDepth = 100\n       LinkContractAddress = '0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9'\n       ChainID = '2337'\n       MinIncomingConfirmations = 1\n       MinContractPayment = '0.0000001 link'\n       FinalityDepth = 5\n\n       [[EVM.Nodes]]\n       Name = 'dst'\n       WsUrl = 'ws://blockchain-node-65f1d:8555'\n       HttpUrl = 'http://blockchain-node-65f1d:8555'\n\n\t   [Log]\n\t   JSONConsole = true\n\t   Level = 'debug'\n\t   [Pyroscope]\n\t   ServerAddress = 'http://host.docker.internal:4040'\n\t   Environment = 'local'\n\t   [WebServer]\n       SessionTimeout = '999h0m0s'\n       HTTPWriteTimeout = '3m'\n\t   SecureCookies = false\n\t   HTTPPort = 6688\n\t   [WebServer.TLS]\n\t   HTTPSPort = 0\n       [WebServer.RateLimit]\n       Authenticated = 5000\n       Unauthenticated = 5000\n\t   [JobPipeline]\n\t   [JobPipeline.HTTPRequest]\n\t   DefaultTimeout = '1m'\n       [Log.File]\n       MaxSize = '0b'\n\t\n       [Feature]\n       FeedsManager = true\n       LogPoller = true\n       UICSAKeys = true\n       [OCR2]\n       Enabled = true\n       SimulateTransactions = false\n       DefaultTransactionQueueDepth = 1\n       [P2P.V2]\n       Enabled = true\n       ListenAddresses = ['0.0.0.0:6690']\n"
user_config_overrides = ''
test_secrets_overrides = ''
user_secrets_overrides = ''
port = 0
p2p_port = 0
custom_ports = []
debugger_port = 0

[[nodesets.node_specs]]
no_dns = false

[nodesets.node_specs.node]
image = 'public.ecr.aws/chainlink/chainlink:2.26.0'
name = ''
docker_file = ''
docker_ctx = ''
pull_image = false
capabilities = []
capabilities_container_dir = ''
test_config_overrides = "\n       [[EVM]]\n       LogPollInterval = '1s'\n       BlockBackfillDepth = 100\n       LinkContractAddress = '0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9'\n       ChainID = '1337'\n       MinIncomingConfirmations = 1\n       MinContractPayment = '0.0000001 link'\n       FinalityDepth = 5\n\n       [[EVM.Nodes]]\n       Name = 'src'\n       WsUrl = 'ws://blockchain-node-86332:8545'\n       HttpUrl = 'http://blockchain-node-86332:8545'\n\n       [[EVM]]\n       LogPollInterval = '1s'\n       BlockBackfillDepth = 100\n       LinkContractAddress = '0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9'\n       ChainID = '2337'\n       MinIncomingConfirmations = 1\n       MinContractPayment = '0.0000001 link'\n       FinalityDepth = 5\n\n       [[EVM.Nodes]]\n       Name = 'dst'\n       WsUrl = 'ws://blockchain-node-65f1d:8555'\n       HttpUrl = 'http://blockchain-node-65f1d:8555'\n\n\t   [Log]\n\t   JSONConsole = true\n\t   Level = 'debug'\n\t   [Pyroscope]\n\t   ServerAddress = 'http://host.docker.internal:4040'\n\t   Environment = 'local'\n\t   [WebServer]\n       SessionTimeout = '999h0m0s'\n       HTTPWriteTimeout = '3m'\n\t   SecureCookies = false\n\t   HTTPPort = 6688\n\t   [WebServer.TLS]\n\t   HTTPSPort = 0\n       [WebServer.RateLimit]\n       Authenticated = 5000\n       Unauthenticated = 5000\n\t   [JobPipeline]\n\t   [JobPipeline.HTTPRequest]\n\t   DefaultTimeout = '1m'\n       [Log.File]\n       MaxSize = '0b'\n\t\n       [Feature]\n       FeedsManager = true\n       LogPoller = true\n       UICSAKeys = true\n       [OCR2]\n       Enabled = true\n       SimulateTransactions = false\n       DefaultTransactionQueueDepth = 1\n       [P2P.V2]\n       Enabled = true\n       ListenAddresses = ['0.0.0.0:6690']\n"
user_config_overrides = ''
test_secrets_overrides = ''
user_secrets_overrides = ''
port = 0
p2p_port = 0
custom_ports = []
debugger_port = 0

[nodesets.out]
use_cache = true

[nodesets.out.db_out]
url = 'postgresql://chainlink:thispasswordislongenough@127.0.0.1:13000/chainlink?sslmode=disable'
container_name = 'don-ns-postgresql'
internal_url = 'postgresql://chainlink:thispasswordislongenough@don-ns-postgresql:5432/chainlink?sslmode=disable'
jd_url = ''
jd_internal_url = ''

[[nodesets.out.cl_nodes]]
use_cache = true

[nodesets.out.cl_nodes.node]
api_auth_user = 'notreal@fakeemail.ch'
api_auth_password = 'fj293fbBnlQ!f9vNs'
container_name = 'don-node0'
url = 'http://127.0.0.1:10000'
internal_url = 'http://don-node0:6688'
p2p_internal_url = 'http://don-node0:6690'
internal_ip = '172.19.0.13'

[nodesets.out.cl_nodes.postgresql]
url = 'postgresql://chainlink:thispasswordislongenough@127.0.0.1:13000/db_0?sslmode=disable'
container_name = ''
internal_url = 'postgresql://chainlink:thispasswordislongenough@don-ns-postgresql:5432/db_0?sslmode=disable'
jd_url = ''
jd_internal_url = ''

[[nodesets.out.cl_nodes]]
use_cache = true

[nodesets.out.cl_nodes.node]
api_auth_user = 'notreal@fakeemail.ch'
api_auth_password = 'fj293fbBnlQ!f9vNs'
container_name = 'don-node1'
url = 'http://127.0.0.1:10001'
internal_url = 'http://don-node1:6688'
p2p_internal_url = 'http://don-node1:6690'
internal_ip = '172.19.0.14'

[nodesets.out.cl_nodes.postgresql]
url = 'postgresql://chainlink:thispasswordislongenough@127.0.0.1:13000/db_1?sslmode=disable'
container_name = ''
internal_url = 'postgresql://chainlink:thispasswordislongenough@don-ns-postgresql:5432/db_1?sslmode=disable'
jd_url = ''
jd_internal_url = ''

[[nodesets.out.cl_nodes]]
use_cache = true

[nodesets.out.cl_nodes.node]
api_auth_user = 'notreal@fakeemail.ch'
api_auth_password = 'fj293fbBnlQ!f9vNs'
container_name = 'don-node2'
url = 'http://127.0.0.1:10002'
internal_url = 'http://don-node2:6688'
p2p_internal_url = 'http://don-node2:6690'
internal_ip = '172.19.0.15'

[nodesets.out.cl_nodes.postgresql]
url = 'postgresql://chainlink:thispasswordislongenough@127.0.0.1:13000/db_2?sslmode=disable'
container_name = ''
internal_url = 'postgresql://chainlink:thispasswordislongenough@don-ns-postgresql:5432/db_2?sslmode=disable'
jd_url = ''
jd_internal_url = ''

[[nodesets.out.cl_nodes]]
use_cache = true

[nodesets.out.cl_nodes.node]
api_auth_user = 'notreal@fakeemail.ch'
api_auth_password = 'fj293fbBnlQ!f9vNs'
container_name = 'don-node3'
url = 'http://127.0.0.1:10003'
internal_url = 'http://don-node3:6688'
p2p_internal_url = 'http://don-node3:6690'
internal_ip = '172.19.0.16'

[nodesets.out.cl_nodes.postgresql]
url = 'postgresql://chainlink:thispasswordislongenough@127.0.0.1:13000/db_3?sslmode=disable'
container_name = ''
internal_url = 'postgresql://chainlink:thispasswordislongenough@don-ns-postgresql:5432/db_3?sslmode=disable'
jd_url = ''
jd_internal_url = ''

[verifier]
image = 'verifier:dev'
port = 8100
source_code_path = '../verifier'
container_name = 'verifier'
use_cache = false

[verifier.db]
image = 'postgres:16-alpine'

[executor]
image = 'executor:dev'
port = 8101
source_code_path = '../executor'
container_name = 'executor'
use_cache = false

[executor.db]
image = 'postgres:16-alpine'

[indexer]
image = 'indexer:dev'
port = 8102
source_code_path = '../indexer'
container_name = 'indexer'
use_cache = false

[indexer.db]
image = 'postgres:16-alpine'

[aggregator]
image = 'aggregator:dev'
port = 8103
source_code_path = '../aggregator'
container_name = 'aggregator'
use_cache = false

[aggregator.db]
image = 'postgres:16-alpine'
