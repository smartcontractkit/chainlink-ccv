// Code generated by mockery v2.53.5. DO NOT EDIT.

package executor_mocks

import (
	context "context"

	types "github.com/smartcontractkit/chainlink-ccv/protocol/pkg/types"
	mock "github.com/stretchr/testify/mock"
)

// MockOffchainStorageReader is an autogenerated mock type for the OffchainStorageReader type
type MockOffchainStorageReader struct {
	mock.Mock
}

type MockOffchainStorageReader_Expecter struct {
	mock *mock.Mock
}

func (_m *MockOffchainStorageReader) EXPECT() *MockOffchainStorageReader_Expecter {
	return &MockOffchainStorageReader_Expecter{mock: &_m.Mock}
}

// ReadCCVData provides a mock function with given fields: ctx
func (_m *MockOffchainStorageReader) ReadCCVData(ctx context.Context) ([]types.QueryResponse, error) {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for ReadCCVData")
	}

	var r0 []types.QueryResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) ([]types.QueryResponse, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) []types.QueryResponse); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]types.QueryResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockOffchainStorageReader_ReadCCVData_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ReadCCVData'
type MockOffchainStorageReader_ReadCCVData_Call struct {
	*mock.Call
}

// ReadCCVData is a helper method to define mock.On call
//   - ctx context.Context
func (_e *MockOffchainStorageReader_Expecter) ReadCCVData(ctx interface{}) *MockOffchainStorageReader_ReadCCVData_Call {
	return &MockOffchainStorageReader_ReadCCVData_Call{Call: _e.mock.On("ReadCCVData", ctx)}
}

func (_c *MockOffchainStorageReader_ReadCCVData_Call) Run(run func(ctx context.Context)) *MockOffchainStorageReader_ReadCCVData_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context))
	})
	return _c
}

func (_c *MockOffchainStorageReader_ReadCCVData_Call) Return(_a0 []types.QueryResponse, _a1 error) *MockOffchainStorageReader_ReadCCVData_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockOffchainStorageReader_ReadCCVData_Call) RunAndReturn(run func(context.Context) ([]types.QueryResponse, error)) *MockOffchainStorageReader_ReadCCVData_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockOffchainStorageReader creates a new instance of MockOffchainStorageReader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockOffchainStorageReader(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockOffchainStorageReader {
	mock := &MockOffchainStorageReader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
