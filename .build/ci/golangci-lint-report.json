{"Issues":[{"FromLinter":"depguard","Text":"import 'github.com/docker/docker/client' is not allowed from list 'main': Use context package from the standard library.","Severity":"error","SourceLines":["\t\"github.com/docker/docker/client\""],"Pos":{"Filename":".build/ci/build/devenv/cmd/ccv/ccv.go","Offset":71,"Line":10,"Column":2},"SuggestedFixes":[{"Message":"Use context package from the standard library.","TextEdits":null}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"depguard","Text":"import 'github.com/stretchr/testify/require' is not allowed from list 'test': Use github.com/stretchr/testify/require","Severity":"error","SourceLines":["\t\"github.com/stretchr/testify/require\""],"Pos":{"Filename":".build/ci/build/devenv/tests/e2e/soak_test.go","Offset":96,"Line":7,"Column":2},"SuggestedFixes":[{"Message":"Use github.com/stretchr/testify/require","TextEdits":null}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"depguard","Text":"import 'github.com/stretchr/testify/require' is not allowed from list 'test': Use github.com/stretchr/testify/require","Severity":"error","SourceLines":["\t\"github.com/stretchr/testify/require\""],"Pos":{"Filename":".build/ci/build/devenv/tests/services/aggregator_test.go","Offset":106,"Line":7,"Column":2},"SuggestedFixes":[{"Message":"Use github.com/stretchr/testify/require","TextEdits":null}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"depguard","Text":"import 'github.com/stretchr/testify/require' is not allowed from list 'test': Use github.com/stretchr/testify/require","Severity":"error","SourceLines":["\t\"github.com/stretchr/testify/require\""],"Pos":{"Filename":".build/ci/build/devenv/tests/services/executor_test.go","Offset":106,"Line":7,"Column":2},"SuggestedFixes":[{"Message":"Use github.com/stretchr/testify/require","TextEdits":null}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"depguard","Text":"import 'github.com/stretchr/testify/require' is not allowed from list 'test': Use github.com/stretchr/testify/require","Severity":"error","SourceLines":["\t\"github.com/stretchr/testify/require\""],"Pos":{"Filename":".build/ci/build/devenv/tests/services/indexer_test.go","Offset":106,"Line":7,"Column":2},"SuggestedFixes":[{"Message":"Use github.com/stretchr/testify/require","TextEdits":null}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"depguard","Text":"import 'github.com/stretchr/testify/require' is not allowed from list 'test': Use github.com/stretchr/testify/require","Severity":"error","SourceLines":["\t\"github.com/stretchr/testify/require\""],"Pos":{"Filename":".build/ci/build/devenv/tests/services/verifier_test.go","Offset":106,"Line":7,"Column":2},"SuggestedFixes":[{"Message":"Use github.com/stretchr/testify/require","TextEdits":null}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"dupl","Text":"1-152 lines are duplicate of `services/executor.go:1-152`","Severity":"info","SourceLines":["package services","","import (","\t\"context\"","\t\"fmt\"","\t\"path/filepath\"","\t\"strconv\"","","\t\"github.com/docker/docker/api/types/container\"","\t\"github.com/docker/go-connections/nat\"","\t\"github.com/testcontainers/testcontainers-go\"","\t\"github.com/testcontainers/testcontainers-go/modules/postgres\"","","\t\"github.com/smartcontractkit/chainlink-testing-framework/framework\"",")","","const (","\tDefaultAggregatorName    = \"aggregator\"","\tDefaultAggregatorDBName  = \"aggregator-db\"","\tDefaultAggregatorImage   = \"aggregator:dev\"","\tDefaultAggregatorPort    = 8103","\tDefaultAggregatorDBPort  = 7432","\tDefaultAggregatorSQLInit = \"init.sql\"","","\tDefaultAggregatorDBImage = \"postgres:16-alpine\"",")","","var (","\tDefaultAggregatorDBConnectionString = fmt.Sprintf(\"postgresql://%s:%s@localhost:%d/%s?sslmode=disable\",","\t\tDefaultAggregatorName, DefaultAggregatorName, DefaultAggregatorDBPort, DefaultAggregatorName)",")","","type AggregatorDBInput struct {","\tImage string `toml:\"image\"`","}","","type AggregatorInput struct {","\tImage          string            `toml:\"image\"`","\tPort           int               `toml:\"port\"`","\tSourceCodePath string            `toml:\"source_code_path\"`","\tDB             *DBInput          `toml:\"db\"`","\tContainerName  string            `toml:\"container_name\"`","\tUseCache       bool              `toml:\"use_cache\"`","\tOut            *AggregatorOutput `toml:\"-\"`","}","","type AggregatorOutput struct {","\tUseCache           bool   `toml:\"use_cache\"`","\tContainerName      string `toml:\"container_name\"`","\tExternalHTTPURL    string `toml:\"http_url\"`","\tInternalHTTPURL    string `toml:\"internal_http_url\"`","\tDBURL              string `toml:\"db_url\"`","\tDBConnectionString string `toml:\"db_connection_string\"`","}","","func aggregatorDefaults(in *AggregatorInput) {","\tif in.Image == \"\" {","\t\tin.Image = DefaultAggregatorImage","\t}","\tif in.Port == 0 {","\t\tin.Port = DefaultAggregatorPort","\t}","\tif in.ContainerName == \"\" {","\t\tin.ContainerName = DefaultAggregatorName","\t}","\tif in.DB == nil {","\t\tin.DB = \u0026DBInput{","\t\t\tImage: DefaultAggregatorDBImage,","\t\t}","\t}","}","","func NewAggregator(in *AggregatorInput) (*AggregatorOutput, error) {","\tif in.Out != nil \u0026\u0026 in.Out.UseCache {","\t\treturn in.Out, nil","\t}","\tctx := context.Background()","\taggregatorDefaults(in)","\tp, err := CwdSourcePath(in.SourceCodePath)","\tif err != nil {","\t\treturn in.Out, err","\t}","","\t/* Database */","\t_, err = postgres.Run(ctx,","\t\tin.DB.Image,","\t\ttestcontainers.WithName(DefaultAggregatorDBName),","\t\ttestcontainers.WithExposedPorts(\"5432/tcp\"),","\t\ttestcontainers.WithHostConfigModifier(func(h *container.HostConfig) {","\t\t\th.PortBindings = nat.PortMap{","\t\t\t\t\"5432/tcp\": []nat.PortBinding{","\t\t\t\t\t{HostPort: strconv.Itoa(DefaultAggregatorDBPort)},","\t\t\t\t},","\t\t\t}","\t\t}),","\t\ttestcontainers.WithLabels(framework.DefaultTCLabels()),","\t\tpostgres.WithDatabase(DefaultAggregatorName),","\t\tpostgres.WithUsername(DefaultAggregatorName),","\t\tpostgres.WithPassword(DefaultAggregatorName),","\t\tpostgres.WithInitScripts(filepath.Join(p, DefaultAggregatorSQLInit)),","\t)","\tif err != nil {","\t\treturn nil, fmt.Errorf(\"failed to create database: %w\", err)","\t}","","\t/* Service */","\treq := testcontainers.ContainerRequest{","\t\tImage:    in.Image,","\t\tName:     in.ContainerName,","\t\tLabels:   framework.DefaultTCLabels(),","\t\tNetworks: []string{framework.DefaultNetworkName},","\t\tNetworkAliases: map[string][]string{","\t\t\tframework.DefaultNetworkName: {in.ContainerName},","\t\t},","\t\t// add more internal ports here with /tcp suffix, ex.: 9222/tcp","\t\tExposedPorts: []string{\"8100/tcp\"},","\t\tHostConfigModifier: func(h *container.HostConfig) {","\t\t\th.PortBindings = nat.PortMap{","\t\t\t\t// add more internal/external pairs here, ex.: 9222/tcp as a key and HostPort is the exposed port (no /tcp prefix!)","\t\t\t\t\"8100/tcp\": []nat.PortBinding{","\t\t\t\t\t{HostPort: strconv.Itoa(in.Port)},","\t\t\t\t},","\t\t\t}","\t\t},","\t}","","\tif in.SourceCodePath != \"\" {","\t\treq.Mounts = GoSourcePathMounts(p, AppPathInsideContainer)","\t\tframework.L.Info().","\t\t\tStr(\"Service\", in.ContainerName).","\t\t\tStr(\"Source\", p).Msg(\"Using source code path, hot-reload mode\")","\t}","","\tc, err := testcontainers.GenericContainer(ctx, testcontainers.GenericContainerRequest{","\t\tContainerRequest: req,","\t\tStarted:          true,","\t})","\tif err != nil {","\t\treturn nil, fmt.Errorf(\"failed to start container: %w\", err)","\t}","\thost, err := c.Host(ctx)","\tif err != nil {","\t\treturn nil, fmt.Errorf(\"failed to get container host: %w\", err)","\t}","","\treturn \u0026AggregatorOutput{","\t\tContainerName:      in.ContainerName,","\t\tExternalHTTPURL:    fmt.Sprintf(\"http://%s:%d\", host, in.Port),","\t\tInternalHTTPURL:    fmt.Sprintf(\"http://%s:%d\", in.ContainerName, in.Port),","\t\tDBConnectionString: DefaultAggregatorDBConnectionString,","\t}, nil","}"],"Pos":{"Filename":".build/ci/build/devenv/services/aggregator.go","Offset":0,"Line":1,"Column":0},"LineRange":{"From":1,"To":152},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"dupl","Text":"1-152 lines are duplicate of `services/indexer.go:1-154`","Severity":"info","SourceLines":["package services","","import (","\t\"context\"","\t\"fmt\"","\t\"path/filepath\"","\t\"strconv\"","","\t\"github.com/docker/docker/api/types/container\"","\t\"github.com/docker/go-connections/nat\"","\t\"github.com/testcontainers/testcontainers-go\"","\t\"github.com/testcontainers/testcontainers-go/modules/postgres\"","","\t\"github.com/smartcontractkit/chainlink-testing-framework/framework\"",")","","const (","\tDefaultExecutorName    = \"executor\"","\tDefaultExecutorDBName  = \"executor-db\"","\tDefaultExecutorImage   = \"executor:dev\"","\tDefaultExecutorPort    = 8101","\tDefaultExecutorDBPort  = 9432","\tDefaultExecutorSQLInit = \"init.sql\"","","\tDefaultExecutorDBImage = \"postgres:16-alpine\"",")","","var (","\tDefaultExecutorDBConnectionString = fmt.Sprintf(\"postgresql://%s:%s@localhost:%d/%s?sslmode=disable\",","\t\tDefaultExecutorName, DefaultExecutorName, DefaultExecutorDBPort, DefaultExecutorName)",")","","type ExecutorDBInput struct {","\tImage string `toml:\"image\"`","}","","type ExecutorInput struct {","\tImage          string          `toml:\"image\"`","\tPort           int             `toml:\"port\"`","\tSourceCodePath string          `toml:\"source_code_path\"`","\tDB             *DBInput        `toml:\"db\"`","\tContainerName  string          `toml:\"container_name\"`","\tUseCache       bool            `toml:\"use_cache\"`","\tOut            *ExecutorOutput `toml:\"-\"`","}","","type ExecutorOutput struct {","\tUseCache           bool   `toml:\"use_cache\"`","\tContainerName      string `toml:\"container_name\"`","\tExternalHTTPURL    string `toml:\"http_url\"`","\tInternalHTTPURL    string `toml:\"internal_http_url\"`","\tDBURL              string `toml:\"db_url\"`","\tDBConnectionString string `toml:\"db_connection_string\"`","}","","func executorDefaults(in *ExecutorInput) {","\tif in.Image == \"\" {","\t\tin.Image = DefaultExecutorImage","\t}","\tif in.Port == 0 {","\t\tin.Port = DefaultExecutorPort","\t}","\tif in.ContainerName == \"\" {","\t\tin.ContainerName = DefaultExecutorName","\t}","\tif in.DB == nil {","\t\tin.DB = \u0026DBInput{","\t\t\tImage: DefaultExecutorDBImage,","\t\t}","\t}","}","","func NewExecutor(in *ExecutorInput) (*ExecutorOutput, error) {","\tif in.Out != nil \u0026\u0026 in.Out.UseCache {","\t\treturn in.Out, nil","\t}","\tctx := context.Background()","\texecutorDefaults(in)","\tp, err := CwdSourcePath(in.SourceCodePath)","\tif err != nil {","\t\treturn in.Out, err","\t}","","\t/* Database */","\t_, err = postgres.Run(ctx,","\t\tin.DB.Image,","\t\ttestcontainers.WithName(DefaultExecutorDBName),","\t\ttestcontainers.WithExposedPorts(\"5432/tcp\"),","\t\ttestcontainers.WithHostConfigModifier(func(h *container.HostConfig) {","\t\t\th.PortBindings = nat.PortMap{","\t\t\t\t\"5432/tcp\": []nat.PortBinding{","\t\t\t\t\t{HostPort: strconv.Itoa(DefaultExecutorDBPort)},","\t\t\t\t},","\t\t\t}","\t\t}),","\t\ttestcontainers.WithLabels(framework.DefaultTCLabels()),","\t\tpostgres.WithDatabase(DefaultExecutorName),","\t\tpostgres.WithUsername(DefaultExecutorName),","\t\tpostgres.WithPassword(DefaultExecutorName),","\t\tpostgres.WithInitScripts(filepath.Join(p, DefaultExecutorSQLInit)),","\t)","\tif err != nil {","\t\treturn nil, fmt.Errorf(\"failed to create database: %w\", err)","\t}","","\t/* Service */","\treq := testcontainers.ContainerRequest{","\t\tImage:    in.Image,","\t\tName:     in.ContainerName,","\t\tLabels:   framework.DefaultTCLabels(),","\t\tNetworks: []string{framework.DefaultNetworkName},","\t\tNetworkAliases: map[string][]string{","\t\t\tframework.DefaultNetworkName: {in.ContainerName},","\t\t},","\t\t// add more internal ports here with /tcp suffix, ex.: 9222/tcp","\t\tExposedPorts: []string{\"8100/tcp\"},","\t\tHostConfigModifier: func(h *container.HostConfig) {","\t\t\th.PortBindings = nat.PortMap{","\t\t\t\t// add more internal/external pairs here, ex.: 9222/tcp as a key and HostPort is the exposed port (no /tcp prefix!)","\t\t\t\t\"8100/tcp\": []nat.PortBinding{","\t\t\t\t\t{HostPort: strconv.Itoa(in.Port)},","\t\t\t\t},","\t\t\t}","\t\t},","\t}","","\tif in.SourceCodePath != \"\" {","\t\treq.Mounts = GoSourcePathMounts(p, AppPathInsideContainer)","\t\tframework.L.Info().","\t\t\tStr(\"Service\", in.ContainerName).","\t\t\tStr(\"Source\", p).Msg(\"Using source code path, hot-reload mode\")","\t}","","\tc, err := testcontainers.GenericContainer(ctx, testcontainers.GenericContainerRequest{","\t\tContainerRequest: req,","\t\tStarted:          true,","\t})","\tif err != nil {","\t\treturn nil, fmt.Errorf(\"failed to start container: %w\", err)","\t}","\thost, err := c.Host(ctx)","\tif err != nil {","\t\treturn nil, fmt.Errorf(\"failed to get container host: %w\", err)","\t}","","\treturn \u0026ExecutorOutput{","\t\tContainerName:      in.ContainerName,","\t\tExternalHTTPURL:    fmt.Sprintf(\"http://%s:%d\", host, in.Port),","\t\tInternalHTTPURL:    fmt.Sprintf(\"http://%s:%d\", in.ContainerName, in.Port),","\t\tDBConnectionString: DefaultExecutorDBConnectionString,","\t}, nil","}"],"Pos":{"Filename":".build/ci/build/devenv/services/executor.go","Offset":0,"Line":1,"Column":0},"LineRange":{"From":1,"To":152},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"dupl","Text":"1-154 lines are duplicate of `services/aggregator.go:1-152`","Severity":"info","SourceLines":["package services","","import (","\t\"context\"","\t\"fmt\"","\t\"path/filepath\"","\t\"strconv\"","","\t\"github.com/docker/docker/api/types/container\"","\t\"github.com/docker/go-connections/nat\"","\t\"github.com/testcontainers/testcontainers-go\"","\t\"github.com/testcontainers/testcontainers-go/modules/postgres\"","","\t\"github.com/smartcontractkit/chainlink-testing-framework/framework\"",")","","const (","\tDefaultIndexerName     = \"indexer\"","\tDefaultIndexerDBName   = \"indexer-db\"","\tDefaultIndexerImage    = \"indexer:dev\"","\tDefaultIndexerHTTPPort = 8102","\tDefaultIndexerDBPort   = 6432","\tDefaultIndexerSQLInit  = \"init.sql\"","","\tDefaultIndexerDBImage = \"postgres:16-alpine\"",")","","var (","\tDefaultIndexerDBConnectionString = fmt.Sprintf(\"postgresql://%s:%s@localhost:%d/%s?sslmode=disable\",","\t\tDefaultIndexerName, DefaultIndexerName, DefaultIndexerDBPort, DefaultIndexerName)",")","","type DBInput struct {","\tImage string `toml:\"image\"`","}","","type IndexerInput struct {","\tImage          string         `toml:\"image\"`","\tPort           int            `toml:\"port\"`","\tSourceCodePath string         `toml:\"source_code_path\"`","\tDB             *DBInput       `toml:\"db\"`","\tContainerName  string         `toml:\"container_name\"`","\tUseCache       bool           `toml:\"use_cache\"`","\tOut            *IndexerOutput `toml:\"-\"`","}","","type IndexerOutput struct {","\tUseCache           bool   `toml:\"use_cache\"`","\tContainerName      string `toml:\"container_name\"`","\tExternalHTTPURL    string `toml:\"http_url\"`","\tInternalHTTPURL    string `toml:\"internal_http_url\"`","\tDBURL              string `toml:\"db_url\"`","\tDBConnectionString string `toml:\"db_connection_string\"`","}","","func defaults(in *IndexerInput) {","\tif in.Image == \"\" {","\t\tin.Image = DefaultIndexerImage","\t}","\tif in.Port == 0 {","\t\tin.Port = DefaultIndexerHTTPPort","\t}","\tif in.ContainerName == \"\" {","\t\tin.ContainerName = DefaultIndexerName","\t}","\tif in.DB == nil {","\t\tin.DB = \u0026DBInput{","\t\t\tImage: DefaultIndexerDBImage,","\t\t}","\t}","}","","// NewIndexer creates and starts a new Service container using testcontainers","func NewIndexer(in *IndexerInput) (*IndexerOutput, error) {","\tif in.Out != nil \u0026\u0026 in.Out.UseCache {","\t\treturn in.Out, nil","\t}","\tctx := context.Background()","\tdefaults(in)","\tp, err := CwdSourcePath(in.SourceCodePath)","\tif err != nil {","\t\treturn in.Out, err","\t}","","\t/* Database */","","\t_, err = postgres.Run(ctx,","\t\tin.DB.Image,","\t\ttestcontainers.WithName(DefaultIndexerDBName),","\t\ttestcontainers.WithExposedPorts(\"5432/tcp\"),","\t\ttestcontainers.WithHostConfigModifier(func(h *container.HostConfig) {","\t\t\th.PortBindings = nat.PortMap{","\t\t\t\t\"5432/tcp\": []nat.PortBinding{","\t\t\t\t\t{HostPort: strconv.Itoa(DefaultIndexerDBPort)},","\t\t\t\t},","\t\t\t}","\t\t}),","\t\ttestcontainers.WithLabels(framework.DefaultTCLabels()),","\t\tpostgres.WithDatabase(DefaultIndexerName),","\t\tpostgres.WithUsername(DefaultIndexerName),","\t\tpostgres.WithPassword(DefaultIndexerName),","\t\tpostgres.WithInitScripts(filepath.Join(p, DefaultIndexerSQLInit)),","\t)","\tif err != nil {","\t\treturn nil, fmt.Errorf(\"failed to create database: %w\", err)","\t}","","\t/* Service */","\treq := testcontainers.ContainerRequest{","\t\tImage:    in.Image,","\t\tName:     in.ContainerName,","\t\tLabels:   framework.DefaultTCLabels(),","\t\tNetworks: []string{framework.DefaultNetworkName},","\t\tNetworkAliases: map[string][]string{","\t\t\tframework.DefaultNetworkName: {in.ContainerName},","\t\t},","\t\t// add more internal ports here with /tcp suffix, ex.: 9222/tcp","\t\tExposedPorts: []string{\"8100/tcp\"},","\t\tHostConfigModifier: func(h *container.HostConfig) {","\t\t\th.PortBindings = nat.PortMap{","\t\t\t\t// add more internal/external pairs here, ex.: 9222/tcp as a key and HostPort is the exposed port (no /tcp prefix!)","\t\t\t\t\"8100/tcp\": []nat.PortBinding{","\t\t\t\t\t{HostPort: strconv.Itoa(in.Port)},","\t\t\t\t},","\t\t\t}","\t\t},","\t}","","\tif in.SourceCodePath != \"\" {","\t\treq.Mounts = GoSourcePathMounts(p, AppPathInsideContainer)","\t\tframework.L.Info().","\t\t\tStr(\"Service\", in.ContainerName).","\t\t\tStr(\"Source\", p).Msg(\"Using source code path, hot-reload mode\")","\t}","","\tc, err := testcontainers.GenericContainer(ctx, testcontainers.GenericContainerRequest{","\t\tContainerRequest: req,","\t\tStarted:          true,","\t})","\tif err != nil {","\t\treturn nil, fmt.Errorf(\"failed to start container: %w\", err)","\t}","\thost, err := c.Host(ctx)","\tif err != nil {","\t\treturn nil, fmt.Errorf(\"failed to get container host: %w\", err)","\t}","","\treturn \u0026IndexerOutput{","\t\tContainerName:      in.ContainerName,","\t\tExternalHTTPURL:    fmt.Sprintf(\"http://%s:%d\", host, in.Port),","\t\tInternalHTTPURL:    fmt.Sprintf(\"http://%s:%d\", in.ContainerName, in.Port),","\t\tDBConnectionString: DefaultIndexerDBConnectionString,","\t}, nil","}"],"Pos":{"Filename":".build/ci/build/devenv/services/indexer.go","Offset":0,"Line":1,"Column":0},"LineRange":{"From":1,"To":154},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"errcheck","Text":"Error return value of `cli.Close` is not checked","Severity":"error","SourceLines":["\tdefer cli.Close()"],"Pos":{"Filename":".build/ci/build/devenv/cmd/ccv/ccv.go","Offset":7698,"Line":269,"Column":17},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"forbidigo","Text":"use of `fmt.Println` forbidden because \"Do not commit print statements.\"","Severity":"error","SourceLines":["\t\tfmt.Println(\"Can't create Docker client, please check if Docker daemon is running!\")"],"Pos":{"Filename":".build/ci/build/devenv/cmd/ccv/ccv.go","Offset":7720,"Line":271,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"forbidigo","Text":"use of `fmt.Println` forbidden because \"Do not commit print statements.\"","Severity":"error","SourceLines":["\t\tfmt.Println(\"Docker is not running, please start Docker daemon first!\")"],"Pos":{"Filename":".build/ci/build/devenv/cmd/ccv/ccv.go","Offset":7881,"Line":276,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"forbidigo","Text":"use of `fmt.Println` forbidden because \"Do not commit print statements.\"","Severity":"error","SourceLines":["\t\tfmt.Println(\"Goodbye!\")"],"Pos":{"Filename":".build/ci/build/devenv/cmd/ccv/completion.go","Offset":1969,"Line":70,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"forbidigo","Text":"use of `fmt.Printf` forbidden because \"Do not commit print statements.\"","Severity":"error","SourceLines":["\t\tfmt.Printf(\"Error: %v\\n\", err)"],"Pos":{"Filename":".build/ci/build/devenv/cmd/ccv/completion.go","Offset":2126,"Line":76,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"forbidigo","Text":"use of `fmt.Printf` forbidden because \"Do not commit print statements.\"","Severity":"error","SourceLines":["\t\tfmt.Printf(\"%-30s %-30s %-40s %-30s\\n\", \"Selector\", \"Type\", \"Address\", \"Version\")"],"Pos":{"Filename":".build/ci/build/devenv/tools.go","Offset":1485,"Line":70,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"forbidigo","Text":"use of `fmt.Println` forbidden because \"Do not commit print statements.\"","Severity":"error","SourceLines":["\t\tfmt.Println(\"--------------------------------------------------------------------------------------------------------------\")"],"Pos":{"Filename":".build/ci/build/devenv/tools.go","Offset":1569,"Line":71,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"forbidigo","Text":"use of `fmt.Printf` forbidden because \"Do not commit print statements.\"","Severity":"error","SourceLines":["\t\t\tfmt.Printf(\"%-30d %-30s %-40s %-30s\\n\", ref.ChainSelector, ref.Type, ref.Address, ref.Version)"],"Pos":{"Filename":".build/ci/build/devenv/tools.go","Offset":1728,"Line":74,"Column":4},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gci","Text":"File is not properly formatted","Severity":"error","SourceLines":["\t\"github.com/smartcontractkit/chainlink-ccv/devenv/services\""],"Pos":{"Filename":".build/ci/build/devenv/cmd/ccv/ccv.go","Offset":105,"Line":11,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":105,"End":192,"NewText":null}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gci","Text":"File is not properly formatted","Severity":"error","SourceLines":["\t\"github.com/smartcontractkit/chainlink-ccv/devenv/services\""],"Pos":{"Filename":".build/ci/build/devenv/environment.go","Offset":30,"Line":6,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":30,"End":121,"NewText":null}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gci","Text":"File is not properly formatted","Severity":"error","SourceLines":["\tchainsel \"github.com/smartcontractkit/chain-selectors\""],"Pos":{"Filename":".build/ci/build/devenv/product_configuration.go","Offset":188,"Line":15,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":188,"End":243,"NewText":null}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gci","Text":"File is not properly formatted","Severity":"error","SourceLines":["\t\"github.com/docker/go-connections/nat\""],"Pos":{"Filename":".build/ci/build/devenv/services/aggregator.go","Offset":122,"Line":10,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":122,"End":161,"NewText":"CSJnaXRodWIuY29tL2RvY2tlci9nby1jb25uZWN0aW9ucy9uYXQiCgkiZ2l0aHViLmNvbS9zbWFydGNvbnRyYWN0a2l0L2NoYWlubGluay10ZXN0aW5nLWZyYW1ld29yay9mcmFtZXdvcmsi"}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gci","Text":"File is not properly formatted","Severity":"error","SourceLines":["\t\"github.com/docker/go-connections/nat\""],"Pos":{"Filename":".build/ci/build/devenv/services/executor.go","Offset":122,"Line":10,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":122,"End":161,"NewText":"CSJnaXRodWIuY29tL2RvY2tlci9nby1jb25uZWN0aW9ucy9uYXQiCgkiZ2l0aHViLmNvbS9zbWFydGNvbnRyYWN0a2l0L2NoYWlubGluay10ZXN0aW5nLWZyYW1ld29yay9mcmFtZXdvcmsi"}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gci","Text":"File is not properly formatted","Severity":"error","SourceLines":["\t\"github.com/testcontainers/testcontainers-go\""],"Pos":{"Filename":".build/ci/build/devenv/services/fake.go","Offset":145,"Line":10,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":145,"End":192,"NewText":null}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gci","Text":"File is not properly formatted","Severity":"error","SourceLines":["\t\"github.com/docker/go-connections/nat\""],"Pos":{"Filename":".build/ci/build/devenv/services/indexer.go","Offset":122,"Line":10,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":122,"End":161,"NewText":"CSJnaXRodWIuY29tL2RvY2tlci9nby1jb25uZWN0aW9ucy9uYXQiCgkiZ2l0aHViLmNvbS9zbWFydGNvbnRyYWN0a2l0L2NoYWlubGluay10ZXN0aW5nLWZyYW1ld29yay9mcmFtZXdvcmsi"}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gci","Text":"File is not properly formatted","Severity":"error","SourceLines":["\t\"github.com/docker/go-connections/nat\""],"Pos":{"Filename":".build/ci/build/devenv/services/verifier.go","Offset":122,"Line":10,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":122,"End":161,"NewText":"CSJnaXRodWIuY29tL2RvY2tlci9nby1jb25uZWN0aW9ucy9uYXQiCgkiZ2l0aHViLmNvbS9zbWFydGNvbnRyYWN0a2l0L2NoYWlubGluay10ZXN0aW5nLWZyYW1ld29yay9mcmFtZXdvcmsi"}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gci","Text":"File is not properly formatted","Severity":"error","SourceLines":["\tccv \"github.com/smartcontractkit/chainlink-ccv/devenv\""],"Pos":{"Filename":".build/ci/build/devenv/tests/e2e/soak_test.go","Offset":39,"Line":6,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":39,"End":134,"NewText":null}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gci","Text":"File is not properly formatted","Severity":"error","SourceLines":["\t\"github.com/smartcontractkit/chainlink-ccv/devenv/services\""],"Pos":{"Filename":".build/ci/build/devenv/tests/services/aggregator_test.go","Offset":44,"Line":6,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":44,"End":104,"NewText":null}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gci","Text":"File is not properly formatted","Severity":"error","SourceLines":["\t\"github.com/smartcontractkit/chainlink-ccv/devenv/services\""],"Pos":{"Filename":".build/ci/build/devenv/tests/services/executor_test.go","Offset":44,"Line":6,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":44,"End":104,"NewText":null}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gci","Text":"File is not properly formatted","Severity":"error","SourceLines":["\t\"github.com/smartcontractkit/chainlink-ccv/devenv/services\""],"Pos":{"Filename":".build/ci/build/devenv/tests/services/indexer_test.go","Offset":44,"Line":6,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":44,"End":104,"NewText":null}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gci","Text":"File is not properly formatted","Severity":"error","SourceLines":["\t\"github.com/smartcontractkit/chainlink-ccv/devenv/services\""],"Pos":{"Filename":".build/ci/build/devenv/tests/services/verifier_test.go","Offset":44,"Line":6,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":44,"End":104,"NewText":null}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"godot","Text":"Comment should end in a period","Severity":"error","SourceLines":["// completer provides autocomplete suggestions for multi-word commands"],"Pos":{"Filename":".build/ci/build/devenv/cmd/ccv/completion.go","Offset":2163,"Line":80,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":2163,"End":2233,"NewText":"Ly8gY29tcGxldGVyIHByb3ZpZGVzIGF1dG9jb21wbGV0ZSBzdWdnZXN0aW9ucyBmb3IgbXVsdGktd29yZCBjb21tYW5kcy4="}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"godot","Text":"Comment should end in a period","Severity":"error","SourceLines":["// - On-chain part deployment using CLDF"],"Pos":{"Filename":".build/ci/build/devenv/product_configuration.go","Offset":7589,"Line":233,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":7589,"End":7629,"NewText":"Ly8gLSBPbi1jaGFpbiBwYXJ0IGRlcGxveW1lbnQgdXNpbmcgQ0xERi4="}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"godot","Text":"Comment should end in a period","Severity":"error","SourceLines":["// CwdSourcePath returns source path for current working directory"],"Pos":{"Filename":".build/ci/build/devenv/services/common.go","Offset":145,"Line":14,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":145,"End":211,"NewText":"Ly8gQ3dkU291cmNlUGF0aCByZXR1cm5zIHNvdXJjZSBwYXRoIGZvciBjdXJyZW50IHdvcmtpbmcgZGlyZWN0b3J5Lg=="}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"godot","Text":"Comment should end in a period","Severity":"error","SourceLines":["// GoSourcePathMounts returns default Golang cache/build-cache and dev-image mounts"],"Pos":{"Filename":".build/ci/build/devenv/services/common.go","Offset":388,"Line":23,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":388,"End":471,"NewText":"Ly8gR29Tb3VyY2VQYXRoTW91bnRzIHJldHVybnMgZGVmYXVsdCBHb2xhbmcgY2FjaGUvYnVpbGQtY2FjaGUgYW5kIGRldi1pbWFnZSBtb3VudHMu"}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"godot","Text":"Comment should end in a period","Severity":"error","SourceLines":["// NewIndexer creates and starts a new Service container using testcontainers"],"Pos":{"Filename":".build/ci/build/devenv/services/indexer.go","Offset":1864,"Line":73,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":1864,"End":1941,"NewText":"Ly8gTmV3SW5kZXhlciBjcmVhdGVzIGFuZCBzdGFydHMgYSBuZXcgU2VydmljZSBjb250YWluZXIgdXNpbmcgdGVzdGNvbnRhaW5lcnMu"}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gofumpt","Text":"File is not properly formatted","Severity":"error","SourceLines":["var ("],"Pos":{"Filename":".build/ci/build/devenv/services/aggregator.go","Offset":642,"Line":28,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":642,"End":850,"NewText":"dmFyIERlZmF1bHRBZ2dyZWdhdG9yREJDb25uZWN0aW9uU3RyaW5nID0gZm10LlNwcmludGYoInBvc3RncmVzcWw6Ly8lczolc0Bsb2NhbGhvc3Q6JWQvJXM/c3NsbW9kZT1kaXNhYmxlIiwKCURlZmF1bHRBZ2dyZWdhdG9yTmFtZSwgRGVmYXVsdEFnZ3JlZ2F0b3JOYW1lLCBEZWZhdWx0QWdncmVnYXRvckRCUG9ydCwgRGVmYXVsdEFnZ3JlZ2F0b3JOYW1lKQ=="}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gofumpt","Text":"File is not properly formatted","Severity":"error","SourceLines":["func GoSourcePathMounts(sourcePath string, containerDirTarget string) testcontainers.ContainerMounts {"],"Pos":{"Filename":".build/ci/build/devenv/services/common.go","Offset":472,"Line":24,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":472,"End":574,"NewText":"ZnVuYyBHb1NvdXJjZVBhdGhNb3VudHMoc291cmNlUGF0aCwgY29udGFpbmVyRGlyVGFyZ2V0IHN0cmluZykgdGVzdGNvbnRhaW5lcnMuQ29udGFpbmVyTW91bnRzIHs="}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gofumpt","Text":"File is not properly formatted","Severity":"error","SourceLines":["var ("],"Pos":{"Filename":".build/ci/build/devenv/services/executor.go","Offset":622,"Line":28,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":622,"End":820,"NewText":"dmFyIERlZmF1bHRFeGVjdXRvckRCQ29ubmVjdGlvblN0cmluZyA9IGZtdC5TcHJpbnRmKCJwb3N0Z3Jlc3FsOi8vJXM6JXNAbG9jYWxob3N0OiVkLyVzP3NzbG1vZGU9ZGlzYWJsZSIsCglEZWZhdWx0RXhlY3V0b3JOYW1lLCBEZWZhdWx0RXhlY3V0b3JOYW1lLCBEZWZhdWx0RXhlY3V0b3JEQlBvcnQsIERlZmF1bHRFeGVjdXRvck5hbWUp"}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gofumpt","Text":"File is not properly formatted","Severity":"error","SourceLines":["var ("],"Pos":{"Filename":".build/ci/build/devenv/services/indexer.go","Offset":618,"Line":28,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":618,"End":811,"NewText":"dmFyIERlZmF1bHRJbmRleGVyREJDb25uZWN0aW9uU3RyaW5nID0gZm10LlNwcmludGYoInBvc3RncmVzcWw6Ly8lczolc0Bsb2NhbGhvc3Q6JWQvJXM/c3NsbW9kZT1kaXNhYmxlIiwKCURlZmF1bHRJbmRleGVyTmFtZSwgRGVmYXVsdEluZGV4ZXJOYW1lLCBEZWZhdWx0SW5kZXhlckRCUG9ydCwgRGVmYXVsdEluZGV4ZXJOYW1lKQ=="}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gofumpt","Text":"File is not properly formatted","Severity":"error","SourceLines":["var ("],"Pos":{"Filename":".build/ci/build/devenv/services/verifier.go","Offset":622,"Line":28,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":622,"End":820,"NewText":"dmFyIERlZmF1bHRWZXJpZmllckRCQ29ubmVjdGlvblN0cmluZyA9IGZtdC5TcHJpbnRmKCJwb3N0Z3Jlc3FsOi8vJXM6JXNAbG9jYWxob3N0OiVkLyVzP3NzbG1vZGU9ZGlzYWJsZSIsCglEZWZhdWx0VmVyaWZpZXJOYW1lLCBEZWZhdWx0VmVyaWZpZXJOYW1lLCBEZWZhdWx0VmVyaWZpZXJEQlBvcnQsIERlZmF1bHRWZXJpZmllck5hbWUp"}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"goimports","Text":"File is not properly formatted","Severity":"error","SourceLines":[""],"Pos":{"Filename":".build/ci/build/devenv/cmd/ccv/ccv.go","Offset":192,"Line":13,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":192,"End":192,"NewText":"CgkiZ2l0aHViLmNvbS9zbWFydGNvbnRyYWN0a2l0L2NoYWlubGluay1jY3YvZGV2ZW52L3NlcnZpY2VzIgo="}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"goimports","Text":"File is not properly formatted","Severity":"error","SourceLines":[""],"Pos":{"Filename":".build/ci/build/devenv/environment.go","Offset":121,"Line":8,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":121,"End":121,"NewText":"CgkiZ2l0aHViLmNvbS9zbWFydGNvbnRyYWN0a2l0L2NoYWlubGluay1jY3YvZGV2ZW52L3NlcnZpY2VzIgo="}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"goimports","Text":"File is not properly formatted","Severity":"error","SourceLines":[""],"Pos":{"Filename":".build/ci/build/devenv/tests/e2e/soak_test.go","Offset":134,"Line":8,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":134,"End":134,"NewText":"CgljY3YgImdpdGh1Yi5jb20vc21hcnRjb250cmFjdGtpdC9jaGFpbmxpbmstY2N2L2RldmVudiIK"}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gosec","Text":"G204: Subprocess launched with variable","Severity":"error","SourceLines":["\t\treturn syscall.Exec(psqlPath, psqlArgs, env)"],"Pos":{"Filename":".build/ci/build/devenv/cmd/ccv/ccv.go","Offset":0,"Line":226,"Column":10},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"fieldalignment: struct with 112 pointer bytes could be 96","Severity":"error","SourceLines":["type Cfg struct {"],"Pos":{"Filename":".build/ci/build/devenv/environment.go","Offset":568,"Line":17,"Column":10},"SuggestedFixes":[{"Message":"Rearrange fields","TextEdits":[{"Pos":568,"End":1383,"NewText":"c3RydWN0IHsKCUNDViAgICAgICAgICAgICAqQ0NWICAgICAgICAgICAgICAgICAgICAgIGB0b21sOiJjY3YiIHZhbGlkYXRlOiJyZXF1aXJlZCJgCglTdG9yYWdlUHJvdmlkZXIgKnMzcHJvdmlkZXIuSW5wdXQgICAgICAgICBgdG9tbDoic3RvcmFnZV9wcm92aWRlciIgdmFsaWRhdGU6InJlcXVpcmVkImAKCUpEICAgICAgICAgICAgICAqamQuSW5wdXQgICAgICAgICAgICAgICAgIGB0b21sOiJqZCJgCglGYWtlICAgICAgICAgICAgKnNlcnZpY2VzLkZha2VJbnB1dCAgICAgICBgdG9tbDoiZmFrZSIgICAgICB2YWxpZGF0ZToicmVxdWlyZWQiYAoJVmVyaWZpZXIgICAgICAgICpzZXJ2aWNlcy5WZXJpZmllcklucHV0ICAgYHRvbWw6InZlcmlmaWVyIiB2YWxpZGF0ZToicmVxdWlyZWQiYAoJRXhlY3V0b3IgICAgICAgICpzZXJ2aWNlcy5FeGVjdXRvcklucHV0ICAgYHRvbWw6ImV4ZWN1dG9yIiB2YWxpZGF0ZToicmVxdWlyZWQiYAoJSW5kZXhlciAgICAgICAgICpzZXJ2aWNlcy5JbmRleGVySW5wdXQgICAgYHRvbWw6ImluZGV4ZXIiIHZhbGlkYXRlOiJyZXF1aXJlZCJgCglBZ2dyZWdhdG9yICAgICAgKnNlcnZpY2VzLkFnZ3JlZ2F0b3JJbnB1dCBgdG9tbDoiYWdncmVnYXRvciIgdmFsaWRhdGU6InJlcXVpcmVkImAKCUJsb2NrY2hhaW5zICAgICBbXSpibG9ja2NoYWluLklucHV0ICAgICAgIGB0b21sOiJibG9ja2NoYWlucyIgICAgICB2YWxpZGF0ZToicmVxdWlyZWQiYAoJTm9kZVNldHMgICAgICAgIFtdKm5zLklucHV0ICAgICAgICAgICAgICAgYHRvbWw6Im5vZGVzZXRzIiAgICAgICAgIHZhbGlkYXRlOiJyZXF1aXJlZCJgCn0="}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"fieldalignment: struct with 112 pointer bytes could be 56","Severity":"error","SourceLines":["type CCV struct {"],"Pos":{"Filename":".build/ci/build/devenv/product_configuration.go","Offset":1438,"Line":39,"Column":10},"SuggestedFixes":[{"Message":"Rearrange fields","TextEdits":[{"Pos":1438,"End":2189,"NewText":"c3RydWN0IHsKCUVBRmFrZSAgICAgICAgICAgICAgKkVBRmFrZSAgICAgICBgdG9tbDoiZWFfZmFrZSJgCglKb2JzICAgICAgICAgICAgICAgICpKb2JzICAgICAgICAgYHRvbWw6ImpvYnMiYAoJQWRkcmVzc2VzTXUgICAgICAgICAqc3luYy5NdXRleCAgIGB0b21sOiItImAKCUdhc1NldHRpbmdzICAgICAgICAgKkdhc1NldHRpbmdzICBgdG9tbDoiZ2FzX3NldHRpbmdzImAKCUxpbmtDb250cmFjdEFkZHJlc3Mgc3RyaW5nICAgICAgICBgdG9tbDoibGlua19jb250cmFjdF9hZGRyZXNzImAKCUFkZHJlc3NlcyAgICAgICAgICAgW11zdHJpbmcgICAgICBgdG9tbDoiYWRkcmVzc2VzImAKCUNMTm9kZXNGdW5kaW5nRVRIICAgZmxvYXQ2NCAgICAgICBgdG9tbDoiY2xfbm9kZXNfZnVuZGluZ19ldGgiYAoJQ0xOb2Rlc0Z1bmRpbmdMaW5rICBmbG9hdDY0ICAgICAgIGB0b21sOiJjbF9ub2Rlc19mdW5kaW5nX2xpbmsiYAoJQ2hhaW5GaW5hbGl0eURlcHRoICBpbnQ2NCAgICAgICAgIGB0b21sOiJjaGFpbl9maW5hbGl0eV9kZXB0aCJgCglWZXJpZmljYXRpb25UaW1lb3V0IHRpbWUuRHVyYXRpb24gYHRvbWw6InZlcmlmaWNhdGlvbl90aW1lb3V0ImAKCVZlcmlmeSAgICAgICAgICAgICAgYm9vbCAgICAgICAgICBgdG9tbDoidmVyaWZ5ImAKfQ=="}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"fieldalignment: struct with 80 pointer bytes could be 56","Severity":"error","SourceLines":["type AggregatorInput struct {"],"Pos":{"Filename":".build/ci/build/devenv/services/aggregator.go","Offset":937,"Line":37,"Column":22},"SuggestedFixes":[{"Message":"Rearrange fields","TextEdits":[{"Pos":937,"End":1306,"NewText":"c3RydWN0IHsKCURCICAgICAgICAgICAgICpEQklucHV0ICAgICAgICAgIGB0b21sOiJkYiJgCglPdXQgICAgICAgICAgICAqQWdncmVnYXRvck91dHB1dCBgdG9tbDoiLSJgCglJbWFnZSAgICAgICAgICBzdHJpbmcgICAgICAgICAgICBgdG9tbDoiaW1hZ2UiYAoJU291cmNlQ29kZVBhdGggc3RyaW5nICAgICAgICAgICAgYHRvbWw6InNvdXJjZV9jb2RlX3BhdGgiYAoJQ29udGFpbmVyTmFtZSAgc3RyaW5nICAgICAgICAgICAgYHRvbWw6ImNvbnRhaW5lcl9uYW1lImAKCVBvcnQgICAgICAgICAgIGludCAgICAgICAgICAgICAgIGB0b21sOiJwb3J0ImAKCVVzZUNhY2hlICAgICAgIGJvb2wgICAgICAgICAgICAgIGB0b21sOiJ1c2VfY2FjaGUiYAp9"}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"fieldalignment: struct with 80 pointer bytes could be 72","Severity":"error","SourceLines":["type AggregatorOutput struct {"],"Pos":{"Filename":".build/ci/build/devenv/services/aggregator.go","Offset":1330,"Line":47,"Column":23},"SuggestedFixes":[{"Message":"Rearrange fields","TextEdits":[{"Pos":1330,"End":1636,"NewText":"c3RydWN0IHsKCUNvbnRhaW5lck5hbWUgICAgICBzdHJpbmcgYHRvbWw6ImNvbnRhaW5lcl9uYW1lImAKCUV4dGVybmFsSFRUUFVSTCAgICBzdHJpbmcgYHRvbWw6Imh0dHBfdXJsImAKCUludGVybmFsSFRUUFVSTCAgICBzdHJpbmcgYHRvbWw6ImludGVybmFsX2h0dHBfdXJsImAKCURCVVJMICAgICAgICAgICAgICBzdHJpbmcgYHRvbWw6ImRiX3VybCJgCglEQkNvbm5lY3Rpb25TdHJpbmcgc3RyaW5nIGB0b21sOiJkYl9jb25uZWN0aW9uX3N0cmluZyJgCglVc2VDYWNoZSAgICAgICAgICAgYm9vbCAgIGB0b21sOiJ1c2VfY2FjaGUiYAp9"}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"fieldalignment: struct with 80 pointer bytes could be 56","Severity":"error","SourceLines":["type ExecutorInput struct {"],"Pos":{"Filename":".build/ci/build/devenv/services/executor.go","Offset":903,"Line":37,"Column":20},"SuggestedFixes":[{"Message":"Rearrange fields","TextEdits":[{"Pos":903,"End":1258,"NewText":"c3RydWN0IHsKCURCICAgICAgICAgICAgICpEQklucHV0ICAgICAgICBgdG9tbDoiZGIiYAoJT3V0ICAgICAgICAgICAgKkV4ZWN1dG9yT3V0cHV0IGB0b21sOiItImAKCUltYWdlICAgICAgICAgIHN0cmluZyAgICAgICAgICBgdG9tbDoiaW1hZ2UiYAoJU291cmNlQ29kZVBhdGggc3RyaW5nICAgICAgICAgIGB0b21sOiJzb3VyY2VfY29kZV9wYXRoImAKCUNvbnRhaW5lck5hbWUgIHN0cmluZyAgICAgICAgICBgdG9tbDoiY29udGFpbmVyX25hbWUiYAoJUG9ydCAgICAgICAgICAgaW50ICAgICAgICAgICAgIGB0b21sOiJwb3J0ImAKCVVzZUNhY2hlICAgICAgIGJvb2wgICAgICAgICAgICBgdG9tbDoidXNlX2NhY2hlImAKfQ=="}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"fieldalignment: struct with 80 pointer bytes could be 72","Severity":"error","SourceLines":["type ExecutorOutput struct {"],"Pos":{"Filename":".build/ci/build/devenv/services/executor.go","Offset":1280,"Line":47,"Column":21},"SuggestedFixes":[{"Message":"Rearrange fields","TextEdits":[{"Pos":1280,"End":1586,"NewText":"c3RydWN0IHsKCUNvbnRhaW5lck5hbWUgICAgICBzdHJpbmcgYHRvbWw6ImNvbnRhaW5lcl9uYW1lImAKCUV4dGVybmFsSFRUUFVSTCAgICBzdHJpbmcgYHRvbWw6Imh0dHBfdXJsImAKCUludGVybmFsSFRUUFVSTCAgICBzdHJpbmcgYHRvbWw6ImludGVybmFsX2h0dHBfdXJsImAKCURCVVJMICAgICAgICAgICAgICBzdHJpbmcgYHRvbWw6ImRiX3VybCJgCglEQkNvbm5lY3Rpb25TdHJpbmcgc3RyaW5nIGB0b21sOiJkYl9jb25uZWN0aW9uX3N0cmluZyJgCglVc2VDYWNoZSAgICAgICAgICAgYm9vbCAgIGB0b21sOiJ1c2VfY2FjaGUiYAp9"}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"fieldalignment: struct with 72 pointer bytes could be 48","Severity":"error","SourceLines":["type FakeInput struct {"],"Pos":{"Filename":".build/ci/build/devenv/services/fake.go","Offset":379,"Line":21,"Column":16},"SuggestedFixes":[{"Message":"Rearrange fields","TextEdits":[{"Pos":379,"End":666,"NewText":"c3RydWN0IHsKCU91dCAgICAgICAgICAgICpGYWtlT3V0cHV0IGB0b21sOiItImAKCUltYWdlICAgICAgICAgIHN0cmluZyAgICAgIGB0b21sOiJpbWFnZSJgCglTb3VyY2VDb2RlUGF0aCBzdHJpbmcgICAgICBgdG9tbDoic291cmNlX2NvZGVfcGF0aCJgCglDb250YWluZXJOYW1lICBzdHJpbmcgICAgICBgdG9tbDoiY29udGFpbmVyX25hbWUiYAoJUG9ydCAgICAgICAgICAgaW50ICAgICAgICAgYHRvbWw6InBvcnQiYAoJVXNlQ2FjaGUgICAgICAgYm9vbCAgICAgICAgYHRvbWw6InVzZV9jYWNoZSJgCn0="}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"fieldalignment: struct with 48 pointer bytes could be 40","Severity":"error","SourceLines":["type FakeOutput struct {"],"Pos":{"Filename":".build/ci/build/devenv/services/fake.go","Offset":684,"Line":30,"Column":17},"SuggestedFixes":[{"Message":"Rearrange fields","TextEdits":[{"Pos":684,"End":878,"NewText":"c3RydWN0IHsKCUNvbnRhaW5lck5hbWUgICBzdHJpbmcgYHRvbWw6ImNvbnRhaW5lcl9uYW1lImAKCUV4dGVybmFsSFRUUFVSTCBzdHJpbmcgYHRvbWw6Imh0dHBfdXJsImAKCUludGVybmFsSFRUUFVSTCBzdHJpbmcgYHRvbWw6ImludGVybmFsX2h0dHBfdXJsImAKCVVzZUNhY2hlICAgICAgICBib29sICAgYHRvbWw6InVzZV9jYWNoZSJgCn0="}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"fieldalignment: struct with 80 pointer bytes could be 56","Severity":"error","SourceLines":["type IndexerInput struct {"],"Pos":{"Filename":".build/ci/build/devenv/services/indexer.go","Offset":885,"Line":37,"Column":19},"SuggestedFixes":[{"Message":"Rearrange fields","TextEdits":[{"Pos":885,"End":1233,"NewText":"c3RydWN0IHsKCURCICAgICAgICAgICAgICpEQklucHV0ICAgICAgIGB0b21sOiJkYiJgCglPdXQgICAgICAgICAgICAqSW5kZXhlck91dHB1dCBgdG9tbDoiLSJgCglJbWFnZSAgICAgICAgICBzdHJpbmcgICAgICAgICBgdG9tbDoiaW1hZ2UiYAoJU291cmNlQ29kZVBhdGggc3RyaW5nICAgICAgICAgYHRvbWw6InNvdXJjZV9jb2RlX3BhdGgiYAoJQ29udGFpbmVyTmFtZSAgc3RyaW5nICAgICAgICAgYHRvbWw6ImNvbnRhaW5lcl9uYW1lImAKCVBvcnQgICAgICAgICAgIGludCAgICAgICAgICAgIGB0b21sOiJwb3J0ImAKCVVzZUNhY2hlICAgICAgIGJvb2wgICAgICAgICAgIGB0b21sOiJ1c2VfY2FjaGUiYAp9"}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"fieldalignment: struct with 80 pointer bytes could be 72","Severity":"error","SourceLines":["type IndexerOutput struct {"],"Pos":{"Filename":".build/ci/build/devenv/services/indexer.go","Offset":1254,"Line":47,"Column":20},"SuggestedFixes":[{"Message":"Rearrange fields","TextEdits":[{"Pos":1254,"End":1560,"NewText":"c3RydWN0IHsKCUNvbnRhaW5lck5hbWUgICAgICBzdHJpbmcgYHRvbWw6ImNvbnRhaW5lcl9uYW1lImAKCUV4dGVybmFsSFRUUFVSTCAgICBzdHJpbmcgYHRvbWw6Imh0dHBfdXJsImAKCUludGVybmFsSFRUUFVSTCAgICBzdHJpbmcgYHRvbWw6ImludGVybmFsX2h0dHBfdXJsImAKCURCVVJMICAgICAgICAgICAgICBzdHJpbmcgYHRvbWw6ImRiX3VybCJgCglEQkNvbm5lY3Rpb25TdHJpbmcgc3RyaW5nIGB0b21sOiJkYl9jb25uZWN0aW9uX3N0cmluZyJgCglVc2VDYWNoZSAgICAgICAgICAgYm9vbCAgIGB0b21sOiJ1c2VfY2FjaGUiYAp9"}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"fieldalignment: struct with 80 pointer bytes could be 56","Severity":"error","SourceLines":["type VerifierInput struct {"],"Pos":{"Filename":".build/ci/build/devenv/services/verifier.go","Offset":903,"Line":37,"Column":20},"SuggestedFixes":[{"Message":"Rearrange fields","TextEdits":[{"Pos":903,"End":1260,"NewText":"c3RydWN0IHsKCURCICAgICAgICAgICAgICpEQklucHV0ICAgICAgICBgdG9tbDoiZGIiYAoJT3V0ICAgICAgICAgICAgKlZlcmlmaWVyT3V0cHV0IGB0b21sOiJvdXQiYAoJSW1hZ2UgICAgICAgICAgc3RyaW5nICAgICAgICAgIGB0b21sOiJpbWFnZSJgCglTb3VyY2VDb2RlUGF0aCBzdHJpbmcgICAgICAgICAgYHRvbWw6InNvdXJjZV9jb2RlX3BhdGgiYAoJQ29udGFpbmVyTmFtZSAgc3RyaW5nICAgICAgICAgIGB0b21sOiJjb250YWluZXJfbmFtZSJgCglQb3J0ICAgICAgICAgICBpbnQgICAgICAgICAgICAgYHRvbWw6InBvcnQiYAoJVXNlQ2FjaGUgICAgICAgYm9vbCAgICAgICAgICAgIGB0b21sOiJ1c2VfY2FjaGUiYAp9"}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"fieldalignment: struct with 80 pointer bytes could be 72","Severity":"error","SourceLines":["type VerifierOutput struct {"],"Pos":{"Filename":".build/ci/build/devenv/services/verifier.go","Offset":1282,"Line":47,"Column":21},"SuggestedFixes":[{"Message":"Rearrange fields","TextEdits":[{"Pos":1282,"End":1588,"NewText":"c3RydWN0IHsKCUNvbnRhaW5lck5hbWUgICAgICBzdHJpbmcgYHRvbWw6ImNvbnRhaW5lcl9uYW1lImAKCUV4dGVybmFsSFRUUFVSTCAgICBzdHJpbmcgYHRvbWw6Imh0dHBfdXJsImAKCUludGVybmFsSFRUUFVSTCAgICBzdHJpbmcgYHRvbWw6ImludGVybmFsX2h0dHBfdXJsImAKCURCVVJMICAgICAgICAgICAgICBzdHJpbmcgYHRvbWw6ImRiX3VybCJgCglEQkNvbm5lY3Rpb25TdHJpbmcgc3RyaW5nIGB0b21sOiJkYl9jb25uZWN0aW9uX3N0cmluZyJgCglVc2VDYWNoZSAgICAgICAgICAgYm9vbCAgIGB0b21sOiJ1c2VfY2FjaGUiYAp9"}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"ineffassign","Text":"ineffectual assignment to err","Severity":"error","SourceLines":["\taddresses, err := out.DataStore.Addresses().Fetch()"],"Pos":{"Filename":".build/ci/build/devenv/product_configuration.go","Offset":6007,"Line":183,"Column":13},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"revive","Text":"indent-error-flow: if block ends with a return statement, so drop this else and outdent its block","Severity":"error","SourceLines":["\t\t} else {","\t\t\treturn prompt.FilterHasPrefix(getCommands(), words[0], true)","\t\t}"],"Pos":{"Filename":".build/ci/build/devenv/cmd/ccv/completion.go","Offset":2559,"Line":92,"Column":10},"LineRange":{"From":92,"To":94},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"revive","Text":"indent-error-flow: if block ends with a return statement, so drop this else and outdent its block","Severity":"error","SourceLines":["\t\t} else {","\t\t\tparent := words[0]","\t\t\tcurrentWord := words[len(words)-1]","\t\t\treturn prompt.FilterHasPrefix(getSubCommands(parent), currentWord, true)","\t\t}"],"Pos":{"Filename":".build/ci/build/devenv/cmd/ccv/completion.go","Offset":2714,"Line":99,"Column":10},"LineRange":{"From":99,"To":103},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"revive","Text":"comment-spacings: no space between comment delimiter and comment text","Severity":"error","SourceLines":["\t//eg.Go(func() error {"],"Pos":{"Filename":".build/ci/build/devenv/environment.go","Offset":3392,"Line":103,"Column":2},"LineRange":{"From":103,"To":103},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"revive","Text":"comment-spacings: no space between comment delimiter and comment text","Severity":"error","SourceLines":["\t//})"],"Pos":{"Filename":".build/ci/build/devenv/environment.go","Offset":3554,"Line":109,"Column":2},"LineRange":{"From":109,"To":109},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"revive","Text":"import-alias-naming: import name (cldf_chain) must match the regular expression: ^[a-z][a-z0-9]{0,}$","Severity":"error","SourceLines":["\tcldf_chain \"github.com/smartcontractkit/chainlink-deployments-framework/chain\""],"Pos":{"Filename":".build/ci/build/devenv/product_configuration.go","Offset":576,"Line":20,"Column":2},"LineRange":{"From":20,"To":20},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"revive","Text":"import-alias-naming: import name (cldf_evm_provider) must match the regular expression: ^[a-z][a-z0-9]{0,}$","Severity":"error","SourceLines":["\tcldf_evm_provider \"github.com/smartcontractkit/chainlink-deployments-framework/chain/evm/provider\""],"Pos":{"Filename":".build/ci/build/devenv/product_configuration.go","Offset":656,"Line":21,"Column":2},"LineRange":{"From":21,"To":21},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"revive","Text":"exported: exported function NewCLDFOperationsEnvironment should have comment or be unexported","Severity":"error","SourceLines":["func NewCLDFOperationsEnvironment(bc []*blockchain.Input) ([]uint64, *deployment.Environment, error) {"],"Pos":{"Filename":".build/ci/build/devenv/product_configuration.go","Offset":2752,"Line":78,"Column":1},"LineRange":{"From":78,"To":78},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"revive","Text":"comment-spacings: no space between comment delimiter and comment text","Severity":"error","SourceLines":["\t\t//* Funding all CL nodes with ETH *//"],"Pos":{"Filename":".build/ci/build/devenv/product_configuration.go","Offset":10212,"Line":330,"Column":3},"LineRange":{"From":330,"To":330},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"revive","Text":"exported: exported function NewAggregator should have comment or be unexported","Severity":"error","SourceLines":["func NewAggregator(in *AggregatorInput) (*AggregatorOutput, error) {"],"Pos":{"Filename":".build/ci/build/devenv/services/aggregator.go","Offset":1961,"Line":73,"Column":1},"LineRange":{"From":73,"To":73},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"revive","Text":"exported: exported function NewExecutor should have comment or be unexported","Severity":"error","SourceLines":["func NewExecutor(in *ExecutorInput) (*ExecutorOutput, error) {"],"Pos":{"Filename":".build/ci/build/devenv/services/executor.go","Offset":1899,"Line":73,"Column":1},"LineRange":{"From":73,"To":73},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"revive","Text":"exported: exported function NewFake should have comment or be unexported","Severity":"error","SourceLines":["func NewFake(in *FakeInput) (*FakeOutput, error) {"],"Pos":{"Filename":".build/ci/build/devenv/services/fake.go","Offset":1041,"Line":46,"Column":1},"LineRange":{"From":46,"To":46},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"revive","Text":"exported: exported function NewVerifier should have comment or be unexported","Severity":"error","SourceLines":["func NewVerifier(in *VerifierInput) (*VerifierOutput, error) {"],"Pos":{"Filename":".build/ci/build/devenv/services/verifier.go","Offset":1901,"Line":73,"Column":1},"LineRange":{"From":73,"To":73},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"revive","Text":"exported: exported function PrintCLDFAddresses should have comment or be unexported","Severity":"error","SourceLines":["func PrintCLDFAddresses(in *Cfg) error {"],"Pos":{"Filename":".build/ci/build/devenv/tools.go","Offset":1238,"Line":64,"Column":1},"LineRange":{"From":64,"To":64},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"SA4010: this result of append is never used, except maybe in other appends","Severity":"error","SourceLines":["\t\t\ttransmittersSrc = append(transmittersSrc, common.HexToAddress(addrSrc.Attributes.Address))"],"Pos":{"Filename":".build/ci/build/devenv/product_configuration.go","Offset":10924,"Line":345,"Column":22},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"SA4010: this result of append is never used, except maybe in other appends","Severity":"error","SourceLines":["\t\t\ttransmittersDst = append(transmittersDst, common.HexToAddress(addrDst.Attributes.Address))"],"Pos":{"Filename":".build/ci/build/devenv/product_configuration.go","Offset":11278,"Line":351,"Column":22},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"SA1019: testcontainers.BindMount is deprecated: use Files or HostConfigModifier in the ContainerRequest, or copy files container APIs to make containers portable across Docker environments BindMount returns a new ContainerMount with a GenericBindMountSource as source This is a convenience method to cover typical use cases. ","Severity":"error","SourceLines":["\t\ttestcontainers.BindMount("],"Pos":{"Filename":".build/ci/build/devenv/services/common.go","Offset":608,"Line":26,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"SA1019: testcontainers.BindMount is deprecated: use Files or HostConfigModifier in the ContainerRequest, or copy files container APIs to make containers portable across Docker environments BindMount returns a new ContainerMount with a GenericBindMountSource as source This is a convenience method to cover typical use cases. ","Severity":"error","SourceLines":["\t\t\ttestcontainers.BindMount("],"Pos":{"Filename":".build/ci/build/devenv/services/verifier.go","Offset":3662,"Line":130,"Column":4},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"SA1019: testcontainers.BindMount is deprecated: use Files or HostConfigModifier in the ContainerRequest, or copy files container APIs to make containers portable across Docker environments BindMount returns a new ContainerMount with a GenericBindMountSource as source This is a convenience method to cover typical use cases. ","Severity":"error","SourceLines":["\t\t\ttestcontainers.BindMount("],"Pos":{"Filename":".build/ci/build/devenv/services/verifier.go","Offset":3732,"Line":134,"Column":4},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"tagalign","Text":"tag is not aligned, should be: toml:\"ccv\"              validate:\"required\"","Severity":"error","SourceLines":["\tCCV             *CCV                      `toml:\"ccv\" validate:\"required\"`"],"Pos":{"Filename":".build/ci/build/devenv/environment.go","Offset":620,"Line":18,"Column":44},"SuggestedFixes":[{"Message":"tag is not aligned, should be: toml:\"ccv\"              validate:\"required\"","TextEdits":[{"Pos":620,"End":652,"NewText":"YHRvbWw6ImNjdiIgICAgICAgICAgICAgIHZhbGlkYXRlOiJyZXF1aXJlZCJg"}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"tagalign","Text":"tag is not aligned, should be: toml:\"fake\"             validate:\"required\"","Severity":"error","SourceLines":["\tFake            *services.FakeInput       `toml:\"fake\"      validate:\"required\"`"],"Pos":{"Filename":".build/ci/build/devenv/environment.go","Offset":1018,"Line":23,"Column":44},"SuggestedFixes":[{"Message":"tag is not aligned, should be: toml:\"fake\"             validate:\"required\"","TextEdits":[{"Pos":1018,"End":1056,"NewText":"YHRvbWw6ImZha2UiICAgICAgICAgICAgIHZhbGlkYXRlOiJyZXF1aXJlZCJg"}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"tagalign","Text":"tag is not aligned, should be: toml:\"verifier\"         validate:\"required\"","Severity":"error","SourceLines":["\tVerifier        *services.VerifierInput   `toml:\"verifier\" validate:\"required\"`"],"Pos":{"Filename":".build/ci/build/devenv/environment.go","Offset":1100,"Line":24,"Column":44},"SuggestedFixes":[{"Message":"tag is not aligned, should be: toml:\"verifier\"         validate:\"required\"","TextEdits":[{"Pos":1100,"End":1137,"NewText":"YHRvbWw6InZlcmlmaWVyIiAgICAgICAgIHZhbGlkYXRlOiJyZXF1aXJlZCJg"}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"tagalign","Text":"tag is not aligned, should be: toml:\"executor\"         validate:\"required\"","Severity":"error","SourceLines":["\tExecutor        *services.ExecutorInput   `toml:\"executor\" validate:\"required\"`"],"Pos":{"Filename":".build/ci/build/devenv/environment.go","Offset":1181,"Line":25,"Column":44},"SuggestedFixes":[{"Message":"tag is not aligned, should be: toml:\"executor\"         validate:\"required\"","TextEdits":[{"Pos":1181,"End":1218,"NewText":"YHRvbWw6ImV4ZWN1dG9yIiAgICAgICAgIHZhbGlkYXRlOiJyZXF1aXJlZCJg"}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"tagalign","Text":"tag is not aligned, should be: toml:\"indexer\"          validate:\"required\"","Severity":"error","SourceLines":["\tIndexer         *services.IndexerInput    `toml:\"indexer\" validate:\"required\"`"],"Pos":{"Filename":".build/ci/build/devenv/environment.go","Offset":1262,"Line":26,"Column":44},"SuggestedFixes":[{"Message":"tag is not aligned, should be: toml:\"indexer\"          validate:\"required\"","TextEdits":[{"Pos":1262,"End":1298,"NewText":"YHRvbWw6ImluZGV4ZXIiICAgICAgICAgIHZhbGlkYXRlOiJyZXF1aXJlZCJg"}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"tagalign","Text":"tag is not aligned, should be: toml:\"aggregator\"       validate:\"required\"","Severity":"error","SourceLines":["\tAggregator      *services.AggregatorInput `toml:\"aggregator\" validate:\"required\"`"],"Pos":{"Filename":".build/ci/build/devenv/environment.go","Offset":1342,"Line":27,"Column":44},"SuggestedFixes":[{"Message":"tag is not aligned, should be: toml:\"aggregator\"       validate:\"required\"","TextEdits":[{"Pos":1342,"End":1381,"NewText":"YHRvbWw6ImFnZ3JlZ2F0b3IiICAgICAgIHZhbGlkYXRlOiJyZXF1aXJlZCJg"}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""}],"Report":{"Linters":[{"Name":"arangolint"},{"Name":"asasalint","Enabled":true},{"Name":"asciicheck"},{"Name":"bidichk"},{"Name":"bodyclose"},{"Name":"canonicalheader"},{"Name":"containedctx"},{"Name":"contextcheck"},{"Name":"copyloopvar","Enabled":true},{"Name":"cyclop"},{"Name":"decorder","Enabled":true},{"Name":"depguard","Enabled":true},{"Name":"dogsled"},{"Name":"dupl","Enabled":true},{"Name":"dupword","Enabled":true},{"Name":"durationcheck"},{"Name":"embeddedstructfieldcheck"},{"Name":"errcheck","Enabled":true},{"Name":"errchkjson"},{"Name":"errname"},{"Name":"errorlint"},{"Name":"exhaustive"},{"Name":"exhaustruct"},{"Name":"exptostd"},{"Name":"forbidigo","Enabled":true},{"Name":"forcetypeassert"},{"Name":"funcorder"},{"Name":"fatcontext","Enabled":true},{"Name":"funlen"},{"Name":"gci","Enabled":true},{"Name":"ginkgolinter"},{"Name":"gocheckcompilerdirectives"},{"Name":"gochecknoglobals"},{"Name":"gochecknoinits"},{"Name":"gochecksumtype"},{"Name":"gocognit"},{"Name":"goconst","Enabled":true},{"Name":"gocritic"},{"Name":"gocyclo"},{"Name":"godot","Enabled":true},{"Name":"godox"},{"Name":"err113"},{"Name":"gofmt","Enabled":true},{"Name":"gofumpt","Enabled":true},{"Name":"golines"},{"Name":"goheader"},{"Name":"goimports","Enabled":true},{"Name":"mnd"},{"Name":"gomoddirectives"},{"Name":"gomodguard"},{"Name":"goprintffuncname"},{"Name":"gosec","Enabled":true},{"Name":"gosmopolitan"},{"Name":"govet","Enabled":true},{"Name":"grouper","Enabled":true},{"Name":"iface"},{"Name":"importas","Enabled":true},{"Name":"inamedparam"},{"Name":"ineffassign","Enabled":true},{"Name":"interfacebloat"},{"Name":"intrange"},{"Name":"ireturn"},{"Name":"lll"},{"Name":"loggercheck"},{"Name":"maintidx"},{"Name":"makezero"},{"Name":"mirror"},{"Name":"misspell","Enabled":true},{"Name":"musttag"},{"Name":"nakedret","Enabled":true},{"Name":"nestif","Enabled":true},{"Name":"nilerr"},{"Name":"nilnesserr"},{"Name":"nilnil"},{"Name":"nlreturn"},{"Name":"noctx"},{"Name":"noinlineerr"},{"Name":"nonamedreturns"},{"Name":"nosprintfhostport"},{"Name":"paralleltest"},{"Name":"perfsprint"},{"Name":"prealloc","Enabled":true},{"Name":"predeclared"},{"Name":"promlinter"},{"Name":"protogetter"},{"Name":"reassign"},{"Name":"recvcheck"},{"Name":"revive","Enabled":true},{"Name":"rowserrcheck"},{"Name":"sloglint"},{"Name":"sqlclosecheck"},{"Name":"spancheck"},{"Name":"staticcheck","Enabled":true},{"Name":"swaggo"},{"Name":"tagalign","Enabled":true},{"Name":"tagliatelle"},{"Name":"testableexamples"},{"Name":"testifylint"},{"Name":"testpackage"},{"Name":"thelper"},{"Name":"tparallel"},{"Name":"typecheck","Enabled":true},{"Name":"unconvert","Enabled":true},{"Name":"unparam"},{"Name":"unused","Enabled":true},{"Name":"usestdlibvars"},{"Name":"usetesting"},{"Name":"varnamelen"},{"Name":"wastedassign"},{"Name":"whitespace"},{"Name":"wrapcheck"},{"Name":"wsl"},{"Name":"wsl_v5"},{"Name":"zerologlint"},{"Name":"nolintlint","Enabled":true}]}}
